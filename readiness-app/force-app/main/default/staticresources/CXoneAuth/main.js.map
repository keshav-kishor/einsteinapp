{"version":3,"sources":["webpack:///C:/SourceCode/sfdc-einstein-app-package/SFEinstein/dist/common-lib/fesm5/common-lib.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login-success/login-success.component.css","webpack:///./src/app/login-success/login-success.component.html","webpack:///./src/app/login-success/login-success.component.ts","webpack:///./src/app/login/email-validator.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/common/apex-params.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/model/error-message.model.ts","webpack:///./src/services/http-wrapper.service.ts","webpack:///./src/services/navigation-util.service.ts","webpack:///./src/services/salesforce-authentication.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAC7B;AACU;AACiC;AACd;;AAEvD;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA,6DAA6D,sEAAgB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;AACvN;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA,gEAAgE,sEAAgB,EAAE,qDAAqD,qCAAqC,EAAE,qDAAqD;AACnO;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD,SAAS,4BAA4B;AACrC,SAAS;AACT,MAAM;AACN,4DAA4D,sEAAgB,EAAE,iDAAiD,+BAA+B,4DAAM,uBAAuB,4DAAM,0BAA0B,EAAE,iDAAiD;AAC9Q;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA,+DAA+D,sEAAgB,EAAE,oDAAoD,oCAAoC,EAAE,oDAAoD;AAC/N;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA,wDAAwD,sEAAgB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACnM;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,yDAAc;AACnD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS;AACT,MAAM;AACN,2DAA2D,sEAAgB,EAAE,gDAAgD,8BAA8B,4DAAM,kBAAkB,EAAE,gDAAgD;AACrO;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,sBAAsB,4CAAK;AAC3B;AACA,2BAA2B,eAAe;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,yDAAM;AAClB,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,oDAAS,EAAE;AAC3B,SAAS;AACT,MAAM;AACN,uDAAuD,sEAAgB,EAAE,4CAA4C,0BAA0B,4DAAM,CAAC,oDAAS,GAAG,4DAAM,yBAAyB,EAAE,4CAA4C;AAC/O;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,kBAAkB;AAC7C,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS;AACT,MAAM;AACN,yDAAyD,sEAAgB,EAAE,8CAA8C,4BAA4B,4DAAM,iBAAiB,EAAE,8CAA8C;AAC5N;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B,EAAE,KAAK,EAAE,KAAK,EAAE;AAC3C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,oEAAgB;AAChC,MAAM;AACN,6DAA6D,sEAAgB,EAAE,kDAAkD,gCAAgC,4DAAM,CAAC,oEAAgB,GAAG,EAAE,kDAAkD;AAC/O;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEgQ;;AAEhQ,sC;;;;;;;;;;;ACx8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACE;AAEuB;AAEhF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAE;IACvC,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,4FAAqB,EAAC;CAC1D,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACf7B,sD;;;;;;;;;;;ACAA,2BAA2B,qBAAqB,EAAE,qBAAqB,sBAAsB,EAAE,+CAA+C,ukB;;;;;;;;;;;;;;;;;;;ACApG;AACO;AACE;AAOnD;IAGE,sBAAoB,eAAoC;QAApC,oBAAe,GAAf,eAAe,CAAqB;QAFxD,UAAK,GAAG,UAAU,CAAC;QAGjB,IAAM,SAAS,GAAG,8DAAU,CAAC,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IANU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAmC;;SAEpC,CAAC;+EAIqC,8DAAmB;OAH7C,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACe;AACH;AACe;AAErB;AACU;AACC;AACA;AACa;AACN;AACd;AAC6B;AAEhF,IAAM,SAAS,GAAG,+DAAU,CAAC,IAAI,EAAE,CAAC;AAyBpC;IAAA;IAAyB,CAAC;IAAb,SAAS;QAvBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,6FAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uDAAY,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,yDAAc,CAAC,KAAK,EAAE,CAAC;gBACrD,uEAAa;gBACb,qEAAgB;gBAChB,kEAAmB;gBACnB,oEAAgB;gBAChB,oEAAe,CAAC,OAAO,CAAC;oBACtB,MAAM,EAAE;wBACN,OAAO,EAAE,oEAAe;wBACxB,UAAU,EAAE,UAAC,IAAgB,IAAK,WAAI,+EAAmB,CAAC,IAAI,EAAE,SAAS,CAAC,YAAY,GAAG,eAAe,CAAC,EAAvE,CAAuE;wBACzG,IAAI,EAAE,CAAC,+DAAU,CAAC;qBACnB;iBACF,CAAC;aACH;YACD,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,uBAAuB,EAAE,QAAQ,EAAE,qEAAW,CAAC,qBAAqB,EAAC,CAAC;YAC5F,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxCtB,+BAA+B,qBAAqB,uCAAuC,qDAAqD,eAAe,uBAAuB,yBAAyB,yCAAyC,6BAA6B,oBAAoB,6CAA6C,qBAAqB,qBAAqB,wBAAwB,KAAK,iBAAiB,uBAAuB,yBAAyB,6CAA6C,6BAA6B,oBAAoB,6CAA6C,qBAAqB,sBAAsB,wBAAwB,oBAAoB,2BAA2B,KAAK,+CAA+C,upD;;;;;;;;;;;ACA/wB,uRAAuR,UAAU,+LAA+L,UAAU,oFAAoF,UAAU,iP;;;;;;;;;;;;;;;;;;;;;;;;ACA9gB;AAKtC;AAC2D;AAClC;AACkB;AACN;AACH;AACmB;AAOzE;IAGC,+BAAqD,WAAkC,EAC9E,cAAkC,EAClC,EAAe,EACf,eAAoC,EACpC,iBAAwC,EACxC,MAAqB,EACrB,UAA2B,EAC3B,iBAAyC,EACzC,iBAAwC,EACxC,SAAuB,EACvB,WAA+B;QAVa,gBAAW,GAAX,WAAW,CAAuB;QAC9E,mBAAc,GAAd,cAAc,CAAoB;QAClC,OAAE,GAAF,EAAE,CAAa;QACf,oBAAe,GAAf,eAAe,CAAqB;QACpC,sBAAiB,GAAjB,iBAAiB,CAAuB;QACxC,WAAM,GAAN,MAAM,CAAe;QACrB,eAAU,GAAV,UAAU,CAAiB;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAwB;QACzC,sBAAiB,GAAjB,iBAAiB,CAAuB;QACxC,cAAS,GAAT,SAAS,CAAc;QACvB,gBAAW,GAAX,WAAW,CAAoB;QAGxC,eAAU,GAAG,KAAK,CAAC;QACnB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,oBAAe,GAAG,KAAK,CAAC;QACxB,qBAAgB,GAAG,KAAK,CAAC;QAGzB,iBAAY,GAAG,IAAI,uEAAY,EAAE,CAAC;IATU,CAAC;8BAbjC,qBAAqB;IAwBjC,wCAAQ,GAAR;QACC,IAAI,CAAC,SAAS,GAAG,8DAAU,CAAC,IAAI,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YACrB,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAC/B;aAAM;YACN,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC1B;IACF,CAAC;IACD,0CAAU,GAAV;QAAA,iBAWC;QAVA,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,IAAI,CACjC,UAAC,QAAQ;YACR,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACpE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,kCAAkC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACvG,CAAC,EACD,UAAC,KAAK;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,kBAAkB,GAAG,KAAK,CAAC,CAAC;YAC1E,KAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC5C,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,uDAAuB,GAA/B;QAAA,iBA8DC;QA7DA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC;QAChF,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC;QACjE,IAAM,QAAQ,GAAG,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CACxF,UAAC,QAAQ;YACR,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,+CAA+C,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1H,IAAM,OAAO,GAAG;gBACf,QAAQ,EAAE;oBACT;wBACC,WAAW,EAAE,QAAQ;wBACrB,UAAU,EAAE,UAAU;wBACtB,cAAc,EAAE,QAAQ,CAAC,YAAY;wBACrC,SAAS,EAAE,QAAQ,CAAC,OAAO;wBAC3B,WAAW,EAAE,QAAQ,CAAC,SAAS;wBAC/B,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;wBACpC,UAAU,EAAE,QAAQ;wBACpB,UAAU,EAAE,QAAQ,CAAC,QAAQ;wBAC7B,MAAM,EAAE,QAAQ,CAAC,IAAI;wBACrB,0BAA0B;wBAC1B,UAAU,EAAE,OAAO;qBACnB;iBACD;aACD,CAAC;YACF,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAC1G,UAAC,QAAQ;gBACR,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,+CAA+C,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1H,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;oBAC7B,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,SAAS,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBACpF,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,KAAI,CAAC,kBAAkB,EAAE,CAAC;iBAC1B;qBAAM,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;oBACpC,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;wBAC3D,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,iDAAiD,CAAC,CAAC;wBACjG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC3C,UAAC,QAAQ;4BACR,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;4BACpE,KAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC3B,CAAC,CAAC,CAAC;qBAEJ;iBACD;YACF,CAAC,EACD,UAAC,KAAK;gBACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;gBACvF,KAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACrE,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAChD,CAAC,CACD,CAAC;QACH,CAAC,EACD,UAAC,KAAK;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACvF,KAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC5C,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC,CACD,CAAC;IACH,CAAC;IAEO,kDAAkB,GAA1B;QAAA,iBAmDC;QAlDA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QAC3E,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC;QACjE,IAAM,QAAQ,GAAG,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC1C,UAAC,QAAQ;YACR,IAAM,OAAO,GAAG;gBACf,WAAW,EAAE,QAAQ;gBACrB,UAAU,EAAE,UAAU;gBACtB,cAAc,EAAE,QAAQ,CAAC,SAAS,CAAC,YAAY;gBAC/C,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,OAAO;gBACrC,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE,QAAQ;aACpB,CAAC;YACF,IAAG,QAAQ,CAAC,SAAS,IAAG,EAAE,EAAE;gBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,0CAA0C,CAAC,CAAC;gBAC1F,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;gBACtE,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAG,QAAQ,CAAC,MAAM,KAAK,QAAQ,EAAE;oBAChC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;iBACjG;qBAAM;oBACN,KAAI,CAAC,kBAAkB,EAAE,CAAC;iBAC1B;aACD;iBAAM;gBACN,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAC1G,UAAC,QAAQ;oBACR,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,0CAA0C,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACrH,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACjE,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;gBAClG,CAAC,EACD,UAAC,KAAK;oBACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,0BAA0B,GAAG,KAAK,CAAC,CAAC;oBAClF,KAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;oBAC1D,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;gBACrC,CAAC,CACD,CAAC;aACF;QACF,CAAC,EACD,UAAC,KAAK;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,mBAAmB,GAAG,KAAK,CAAC,CAAC;YAC3E,KAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YAC1D,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;QACrC,CAAC,CACD,CAAC;IAEH,CAAC;IACD,4CAAY,GAAZ,UAAa,kBAA0B,EAAE,WAAmB;QAA5D,iBAaC;QAZA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAAC,IAAI,CAClE,UAAC,QAAQ;YACR,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,mFAAmF,CAAC,CAAC;YACnI,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3B,CAAC,EACD,UAAC,KAAK;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,oBAAoB,GAAG,KAAK,CAAC,CAAC;YAC5E,KAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC5C,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC,CACD,CAAC;IACH,CAAC;IAED,kDAAkB,GAAlB;QAAA,iBAgBC;QAfA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QAC3E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CACnG,UAAC,QAAQ;YACR,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,kDAAkD,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7H,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClF,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,uBAAuB,EAAE,CAAC;QAChC,CAAC,EACD,UAAC,KAAK;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,0BAA0B,GAAG,KAAK,CAAC,CAAC;YAClF,KAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC5C,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC,CACD,CAAC;IACH,CAAC;IACD,uDAAuB,GAAvB;QAAA,iBAcC;QAbA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC;QAChF,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,IAAI,CAC9C,UAAC,QAAQ;YACR,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,+CAA+C,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1H,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YACvC,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC9B,CAAC,EACD,UAAC,KAAK;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,CAAC,IAAI,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACvF,KAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC5C,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC,CACD,CAAC;IACH,CAAC;IAED,6CAAa,GAAb;QACC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,uCAAuC,CAAC;QACpF,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,SAAO,KAAK,4DAAyD,CAAC,CAAC;IACvH,CAAC;IAED,yCAAS,GAAT;QACC,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,kBAAkB,CAAC,KAAK,SAAS,CAAC;IACjF,CAAC;;IAzNW,qBAAqB;QALjC,+DAAS,CAAC;YACV,QAAQ,EAAE,oBAAoB;YAC9B,2HAA6C;;SAE7C,CAAC;QAIY,6GAAM,CAAC,uBAAuB,CAAC;uFACnB,6DAAkB;YAC9B,0DAAW;YACE,8DAAmB;YACjB,gEAAqB;YAChC,wDAAa;YACT,0DAAe;YACR,iEAAsB;YACtB,uFAAqB;YAC7B,sEAAY;YACV,iFAAkB;OAb5B,qBAAqB,CA2NjC;IAAD,4BAAC;CAAA;AA3NiC;;;;;;;;;;;;;AChBlC;AAAA;AAAO,SAAS,cAAc,CAAC,OAAwB;IACnD,IAAM,YAAY,GAAG,iEAAiE,CAAC;IACvF,IAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjD,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,IAAI,EAAC,CAAC;AACrD,CAAC;;;;;;;;;;;;ACND,4LAA4L,kEAAkE,sIAAsI,kBAAkB,0lCAA0lC,sBAAsB,wPAAwP,4BAA4B,0PAA0P,yBAAyB,mRAAmR,6BAA6B,8LAA8L,kBAAkB,4WAA4W,gCAAgC,yQAAyQ,gCAAgC,uMAAuM,kCAAkC,0MAA0M,2BAA2B,0JAA0J,wBAAwB,+KAA+K,wBAAwB,yKAAyK,wBAAwB,8NAA8N,wBAAwB,gZAAgZ,SAAS,+YAA+Y,eAAe,oiBAAoiB,0BAA0B,mXAAmX,sBAAsB,oVAAoV,yBAAyB,+LAA+L,wBAAwB,oE;;;;;;;;;;;ACAlyN,iCAAiC,2BAA2B,EAAE,iBAAiB,iBAAiB,mCAAmC,oDAAoD,eAAe,mBAAmB,qBAAqB,2BAA2B,yBAAyB,gBAAgB,2BAA2B,iBAAiB,iBAAiB,oBAAoB,EAAE,+CAA+C,+uC;;;;;;;;;;;;;;;;;;;;;;;;ACA1X;AACD;AACN;AACK;AAWpC;AAE2C;AAIgB;AACtB;AAOzD;IA4CC,wBAC0C,WAAkC,EACnE,cAAkC,EAClC,EAAe,EACf,eAAoC,EACpC,iBAAwC,EACxC,MAAqB,EACrB,UAA2B,EAC3B,iBAAyC,EACzC,iBAAwC,EACxC,SAAuB;QATU,gBAAW,GAAX,WAAW,CAAuB;QACnE,mBAAc,GAAd,cAAc,CAAoB;QAClC,OAAE,GAAF,EAAE,CAAa;QACf,oBAAe,GAAf,eAAe,CAAqB;QACpC,sBAAiB,GAAjB,iBAAiB,CAAuB;QACxC,WAAM,GAAN,MAAM,CAAe;QACrB,eAAU,GAAV,UAAU,CAAiB;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAwB;QACzC,sBAAiB,GAAjB,iBAAiB,CAAuB;QACxC,cAAS,GAAT,SAAS,CAAc;QAlDxB,mBAAc,GAAG,SAAS,CAAC;QAInC,cAAS,GAAG,IAAI,CAAC;QACjB,oCAA+B,GAAG,KAAK,CAAC;QACxC,mCAA8B,GAAG,KAAK,CAAC;QACvC,iBAAY,GAAG,IAAI,uEAAY,EAAE,CAAC;QAClC,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,IAAI,CAAC;QACtB,YAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAC9B,qBAAgB,GAAG,KAAK,CAAC;QAEzB,gBAAW,GAAG;YACb,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,eAAe,EAAC;YACtC,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAC;YAClC,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAC;YAClC,EAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAC;YACpC,EAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,mBAAmB,EAAC;SAC5C,CAAC;QAEF,iBAAY,GAAQ,KAAK,CAAC;IA8BvB,CAAC;uBAvDQ,cAAc;IA4B1B,sBAAI,oCAAQ;aAAZ;YACC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAI,oCAAQ;aAAZ;YACC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAI,sCAAU;aAAd;YACC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACzC,CAAC;;;OAAA;IAED,sBAAI,gCAAI;aAAR;YACC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;;;OAAA;IAeD,iCAAQ,GAAR;QACC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAc,CAAC,IAAI,EAAE,4BAA4B,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,GAAG,8DAAU,CAAC,IAAI,EAAE,CAAC;QACnC,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAI;YAChB,KAAK,EAAE,gCAAgC;YACvC,KAAK,EAAE,gCAAgC;YACvC,KAAK,EAAE,+BAA+B;YACtC,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,oCAAoC;SAC3C,CAAC;IACL,CAAC;IAEO,wCAAe,GAAvB;QACC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAc,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;QAC1D,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,IAAI,GAAG,KAAK,CAAC;QAEjB,IAAI,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC3E,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAC7E,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;SACzC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,+DAAc,CAAE,CAAE;YAC/D,QAAQ,EAAE,CAAE,EAAE,EAAE,CAAE,yDAAU,CAAC,QAAQ,CAAE,CAAE;YACzC,UAAU,EAAE,CAAE,UAAU,CAAE;YAC1B,IAAI,EAAE,CAAC,IAAI,CAAC;SACZ,CAAC,CAAC;IACJ,CAAC;IAED,uCAAc,GAAd;QACC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAc,CAAC,IAAI,EAAE,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9E,CAAC;IAED,yCAAgB,GAAhB;QACC,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;YAChG,OAAO,GAAG,KAAK,CAAC;SAChB;QACD,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,yCAAgB,GAAhB;QAAA,iBAkBC;QAjBA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAc,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;QACpC,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE/C,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;QACpE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,IAAI,CACxF,UAAC,QAAmB;YACnB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAc,CAAC,IAAI,EAAE,4BAA4B,GAAG,QAAQ,CAAC,CAAC;YAChF,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC7C,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,aAAa,EAAE,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC3E,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QACpD,CAAC,EACD,UAAC,KAAK;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAc,CAAC,IAAI,EAAE,0BAA0B,GAAG,KAAK,CAAC,CAAC;YAC3E,KAAI,CAAC,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QACxC,CAAC,CACD,CAAC;IACH,CAAC;IAEO,yCAAgB,GAAxB;QACC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,QAAQ,CAAC,IAAI;YACnB,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;gBAClC,eAAe;gBACf,IAAI,CAAC,SAAS,CAAC,eAAe;gBAC9B,wCAAwC,CAAC;IAC3C,CAAC;IAGD,wCAAe,GAAf;QACC,MAAM,CAAC,IAAI,CACV,IAAI,CAAC,YAAY,CAAC,cAAc,EAChC,cAAc,EACd,gFAAgF,CAChF,CAAC;IACH,CAAC;IAED,8CAAqB,GAArB;QACC,IAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC1C,CAAC;IAED,sCAAa,GAAb;QACC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,uCAAuC,CAAC;QACpF,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,SAAO,KAAK,4DAAyD,CAAC,CAAC;IACvH,CAAC;;IAxJW,cAAc;QAL1B,+DAAS,CAAC;YACV,QAAQ,EAAE,YAAY;YACtB,mGAAqC;;SAErC,CAAC;QA8CC,6GAAM,CAAC,uBAAuB,CAAC;uFACR,6DAAkB;YAC9B,0DAAW;YACE,8DAAmB;YACjB,gEAAqB;YAChC,wDAAa;YACT,0DAAe;YACR,iEAAsB;YACtB,uFAAqB;YAC7B,sEAAY;OAtDpB,cAAc,CAyJ1B;IAAD,qBAAC;CAAA;AAzJ0B;;;;;;;;;;;;;AC5B3B;AAAA;AAAA;AAAkE;AAElE;IAAA;QAII,yBAAoB,GAAG,mBAAmB,CAAC;IA6B/C,CAAC;IAvBU,eAAI,GAAX;QACI,IAAM,iBAAiB,GAAG,IAAI,gEAAqB,EAAE,CAAC;QACtD,IAAM,KAAK,GAAG,IAAI,UAAU,EAAE,CAAC;QAC/B,8CAA8C;QAC9C,IAAM,MAAM,GAAG,iBAAiB,CAAC,GAAG,CAAC,wDAAa,CAAC,SAAS,CAAC,CAAC;QAC9D,IAAI,MAAM,EAAE;YACR,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC/B,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;YAClC,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,4BAA4B;YAC1G,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,eAAe,CAAC;YAC5C,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;YAC9B,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC;YACtC,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;YACpC,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,eAAe,CAAC;YAC5C,IAAI,GAAG,CAAC,eAAe,KAAK,EAAE,EAAE;gBAC5B,KAAK,CAAC,oBAAoB,GAAG,GAAG,CAAC,eAAe,GAAG,GAAG,GAAG,KAAK,CAAC,oBAAoB,CAAC;aACvF;SACJ;aAAM;YACH,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;YACzB,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC;SAC5B;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IACL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnCD;AAAA;AAAA;AAAgG;AAExF,IAAM,WAAW,GAAG;IAC1B,UAAU,EAAE,KAAK;IACjB,qBAAqB,EAAE,2GAA+B;CACvD,CAAC;;;;;;;;;;;;;ACLF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;ACXpC;AAAA;AAAA;IAAA;QACI,iBAAY,GAAG,EAAE,CAAC;QAClB,aAAQ,GAAG,EAAE,CAAC;QACd,sBAAiB,GAAG,EAAE,CAAC;QACvB,sBAAiB,GAAG,EAAE,CAAC;QACvB,oBAAe,GAAG,EAAE,CAAC;IACzB,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACN0C;AACoB;AACf;AAKhD;IAIE,4BAAoB,UAAsB,EAAU,cAAkC;QAAlE,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAoB;IACtF,CAAC;2BALU,kBAAkB;IAOrB,uCAAU,GAAlB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACvD,OAAO,IAAI,gEAAW,CAAC;YACrB,cAAc,EAAE,oBAAkB,CAAC,WAAW;YAC9C,eAAe,EAAE,SAAS,GAAG,SAAS,CAAC,WAAW;SACnD,CAAC,CAAC;IACL,CAAC;IAED,gCAAG,GAAH,UAAI,GAAW,EAAE,WAAyB;QACxC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,oCAAO,GAAP,UAAQ,GAAW;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,iCAAI,GAAJ,UAAK,GAAW,EAAE,IAAS,EAAE,WAAyB,EAAE,eAAyB;QAC/E,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC;IACvI,CAAC;IAED,gCAAG,GAAH,UAAI,GAAW,EAAE,IAAS,EAAE,WAAyB;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACpG,CAAC;IAED,mCAAM,GAAN,UAAO,GAAW,EAAE,WAAyB;QAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACjG,CAAC;IAED,2CAAc,GAAd,UAAe,GAAW,EAAE,IAAS,EAAE,WAAyB;QAC9D,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAE,CAAC;IACzH,CAAC;;IAnCM,8BAAW,GAAG,iCAAiC,CAAC;IAF5C,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKgC,+DAAU,EAA0B,6DAAkB;OAJ3E,kBAAkB,CAuC9B;IAAD,yBAAC;CAAA;AAvC8B;;;;;;;;;;;;;;;;;;;;ACPY;AACgB;AACd;AAK7C;IAEE,+BAAoB,MAAc,EAAU,UAA2B;QAAnD,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAiB;IAAI,CAAC;IAEpE,0DAA0B,GAAlC;QACE,IAAM,gBAAgB,GAAqB;YACzC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YACrE,kBAAkB,EAAE,IAAI;SACzB,CAAC;QACF,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAED,wCAAQ,GAAR,UAAS,QAAe,EAAE,MAAyB;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,EAAE,CAAC,CAAC;IACtF,CAAC;IAdU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG4B,sDAAM,EAAsB,0DAAe;OAF5D,qBAAqB,CAejC;IAAD,4BAAC;CAAA;AAfiC;;;;;;;;;;;;;;;;;;;;;;ACLS;AACO;AAKC;AACyF;AAGhF;AACG;AAM/D;IAeE,yCAAoB,IAAgB,EAAU,WAA+B,EAAU,iBAAyC,EAAU,MAAqB,EACrJ,eAAoC,EAAU,cAAkC;QADtE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAwB;QAAU,WAAM,GAAN,MAAM,CAAe;QACrJ,oBAAe,GAAf,eAAe,CAAqB;QAAU,mBAAc,GAAd,cAAc,CAAoB;QATlF,sBAAiB,GAAG,gBAAgB,CAAC;QACrC,mBAAc,GAAG,uCAAuC,CAAC;QACzD,2BAAsB,GAAG,uBAAuB,CAAC;QACjD,wBAAmB,GAAG,4BAA4B,CAAC;QACnD,mBAAc,GAAG,8BAA8B,CAAC;QAChD,sBAAiB,GAAG,cAAc,CAAC;QAMzC,IAAI,CAAC,qBAAqB,GAAG,+CAA+C,CAAC;QAC7E,IAAI,CAAC,gBAAgB,GAAG,mGAAmG,CAAC;QAC5H,IAAI,CAAC,uBAAuB,GAAG,+EAA+E,CAAC;QAC/G,IAAI,CAAC,SAAS,GAAG,8DAAU,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;wCAtBU,+BAA+B;IAuB1C,6BAA6B;IAE7B,0DAAgB,GAAhB,UAAiB,QAAgB,EAAE,QAAgB,EAAE,KAAa;QAAlE,iBAuBC;QAtBC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAM,SAAS,GAAG,8DAAU,CAAC,IAAI,EAAE,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,oBAAoB,EAAE,kBAAkB,EACpE,EAAE,UAAU,EAAE,kBAAkB,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,kBAAkB,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,EACtG,UAAC,QAAQ;gBACP,IAAI;oBACF,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBACzC,IAAI,WAAW,CAAC,UAAU,KAAK,GAAG,EAAE;wBAClC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,0BAA0B,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;wBACvG,IAAM,SAAS,GAAG,IAAI,oDAAS,EAAE,CAAC;wBAClC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC9D,OAAO,CAAC,SAAS,CAAC,CAAC;qBACpB;yBAAM;wBACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,uBAAuB,GAAG,QAAQ,CAAC,CAAC;wBAC5F,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;qBACzF;iBACF;gBAAC,OAAO,KAAK,EAAE;oBACd,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,4BAA4B,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC9G,MAAM,CAAC,KAAK,CAAC,CAAC;iBACf;YACH,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAU,GAAV;QAAA,iBAeC;QAdC,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,YAAY,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAM,MAAM,GAAG,kBAAkB,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAE5F,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,QAAa;gBACvD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,wBAAwB,GAAG,QAAQ,CAAC,CAAC;gBAC7F,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,uBAAuB,GAAG,KAAK,CAAC,CAAC;gBACzF,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAY,GAAZ,UAAa,QAAgB;QAA7B,iBAgBC;QAfC,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,YAAY,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAM,MAAM,GAAG,8BAA8B,GAAG,QAAQ,GAAG,8EAA8E,CAAC;QAC1I,IAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC;QAGpG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,QAAa;gBACvD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,0BAA0B,GAAG,QAAQ,CAAC,CAAC;gBAC/F,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,yBAAyB,GAAG,KAAK,CAAC,CAAC;gBAC3F,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAW,GAAX,UAAY,QAAgB;QAA5B,iBAyBC;QAxBC,IAAM,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,kBAAkB,CAAC,GAAG,OAAO,CAAC;QACjF,IAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC;QAC5F,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAClC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,QAAa;gBACpD,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5G,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,IAAI,MAAM,GAAG,QAAQ,CAAC;gBACtB,IAAG,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBACrB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBACzB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,qBAAqB,GAAG,MAAM,CAAC,CAAC;iBACzF;gBACL,IAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtG,IAAM,GAAG,GAAG;oBACV,WAAW,EAAG,MAAM;oBACpB,WAAW,EAAG,SAAS;oBACvB,QAAQ,EAAG,MAAM;iBAClB;gBACL,OAAO,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,EAAE,UAAC,KAAK;gBACR,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,oBAAoB,GAAG,KAAK,CAAC,CAAC;gBACtF,MAAM,CAAC,KAAK,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACH,CAAC;IAED,sDAAY,GAAZ,UAAa,kBAA0B,EAAE,WAAmB;QAA5D,iBAeC;QAdC,IAAM,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChG,IAAM,OAAO,GAAG;YACE,oBAAoB,EAAG,CAAC,kBAAkB,CAAC;YAC3C,aAAa,EAAG,WAAW;SAC5B,CAAC;QAClB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,QAAa;gBACjE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,0BAA0B,GAAG,QAAQ,CAAC,CAAC;gBAC/F,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpB,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,yBAAyB,GAAG,KAAK,CAAC,CAAC;gBAC3F,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAgB,GAAhB,UAAiB,OAAY,EAAE,kBAA0B;QAAzD,iBAgBC;QAfC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,kBAAkB,KAAK,SAAS,EAAC;YACnC,GAAG,GAAG,GAAG,GAAG,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SACzD;aAAM;YACL,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC;SAC5F;QACD,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,QAAa;gBACjE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,8BAA8B,GAAG,QAAQ,CAAC,CAAC;gBACnG,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpB,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,6BAA6B,GAAG,KAAK,CAAC,CAAC;gBAC/F,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4DAAkB,GAAlB,UAAmB,kBAA0B;QAA7C,iBAyBC;QAxBC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,kBAAkB,KAAK,SAAS,EAAC;YACnC,GAAG,GAAG,GAAG,GAAG,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC;YACrD,OAAO,GAAG;gBACR,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,SAAS,CAAC;gBAC3D,UAAU,EAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,QAAQ,CAAC;aAC9D,CAAC;SACH;aAAM;YACL,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACxF,OAAO,GAAG;gBACR,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,SAAS,CAAC,CAAC;aACvE,CAAC;SACH;QAED,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,QAAa;gBACjE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,gCAAgC,GAAG,QAAQ,CAAC,CAAC;gBACrG,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpB,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;gBACjG,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iEAAuB,GAAvB;QAAA,iBAuBC;QAtBC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iCAA+B,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;QAC9E,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI;gBACF,IAAM,UAAU,GAAG,8DAAU,CAAC,IAAI,EAAE,CAAC;gBACrC,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wDAAa,CAAC,eAAe,CAAC,CAAC,CAAC;gBACzF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,UAAU,CAAC,oBAAoB,EAAE,sBAAsB,EAC1E,EAAC,aAAa,EAAG,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC;oBACvE,iBAAiB,EAAE,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,eAAe,CAAC,EAAC,EAC7E,UAAC,QAAQ;oBACR,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,yBAAyB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC9G,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAI,YAAY,CAAC,OAAO,KAAK,MAAM,EAAE;wBACnC,OAAO,CAAC,IAAI,CAAC,CAAC;qBACf;yBAAM;wBACL,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;qBAC5B;gBACL,CAAC,CAAC,CAAC;aACJ;YAAC,OAAO,CAAC,EAAE;gBACV,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAA+B,CAAC,IAAI,EAAE,kCAAkC,GAAG,CAAC,CAAC,CAAC;gBAChG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;IApMU,+BAA+B;QAJ3C,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAiB0B,+DAAU,EAAuB,wEAAkB,EAA6B,iEAAsB,EAAkB,wDAAa;YACpI,8DAAmB,EAA0B,6DAAkB;OAhB/E,+BAA+B,CAwM3C;IAAD,sCAAC;CAAA;AAxM2C","file":"main.js","sourcesContent":["import { NgxLoggerLevel, NGXLogger } from 'ngx-logger';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport { Injectable, defineInjectable, inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar DatastoreKeys = {\r\n    AuthToken: 'authToken',\r\n    AuthErrors: 'authErr',\r\n    AuthSettings: 'authConfig',\r\n    AuthIdpConfig: 'authIdp',\r\n    AppLogs: 'appLogs',\r\n    // Do we really need these?\r\n    QueryString: 'qrystr',\r\n    SessionId: 'sessionId',\r\n    AgentSessionInfo: 'agentSessionInfo',\r\n    AgentLeg: 'agentLeg',\r\n    LocalTime: 'localTime',\r\n    ServerTime: 'serverTime',\r\n    StateInfo: 'stateInfo',\r\n    AgentMessages: 'agentMsgs',\r\n    BusinessUnit: 'businessUnit',\r\n    Permissions: 'permissions',\r\n    AgentSettings: 'agentSettings',\r\n    AgentInfo: 'agentInfo',\r\n    UnavailableCodes: 'unavailableCodes',\r\n    DisableAutoLogin: 'disableAutoLogin',\r\n    InitParam: 'initParam',\r\n    RefreshTokenError: 'refreshTokenError',\r\n    RouterUrl: 'routerUrl',\r\n    CallContacts: 'callContacts',\r\n    SfResult: 'sfResult',\r\n    SFSessionId: 'sfSessionId',\r\n    AgentSkillList: 'agentSkillList',\r\n    Cx1Tab: 'cx1Tab',\r\n    IsCx1Open: 'isCX1Open',\r\n    WfoUrl: 'wfoUrl',\r\n    TimezonesList: 'timezonesList',\r\n    SkillMediaType: 'skillMediaType',\r\n    AgentMuted: 'agentMuted',\r\n    Indicators: 'Indicators',\r\n    CommitmentReminderData: 'commitmentReminderData',\r\n    LastAttentedContactId: 'lastAttentedContactId',\r\n    LastDispoContactId: 'lastDispoContactId',\r\n    NewUserId: \"newUserUUID\",\r\n    TenantId: \"tenantId\",\r\n    AccessSecretKey: \"accessSecretKey\",\r\n    EvolveWebServerUrl: \"evolveWebServerUrl\",\r\n    AdminUserName: \"adminUserName\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AuthToken = /** @class */ (function () {\r\n    function AuthToken() {\r\n    }\r\n    // parse access token response data for Central/Idp/UserHub\r\n    // parse access token response data for Central/Idp/UserHub\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    AuthToken.prototype.parseData = \r\n    // parse access token response data for Central/Idp/UserHub\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        this.accessToken = (data.access_token) ? data.access_token : data.accessToken;\r\n        this.refreshToken = (data.refresh_token) ? data.refresh_token : data.refreshToken;\r\n        this.expiresIn = (data.expires_in) ? data.expires_in : data.accessTokenExpiry;\r\n        this.accessTokenTime = new Date().getTime();\r\n        this.resourceUrl = (data.resource_server_base_uri) ? data.resource_server_base_uri : data.resourceUrl;\r\n        this.businessUnit = (data.bus_no) ? data.bus_no : data.businessUnit;\r\n    };\r\n    return AuthToken;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AppConfig = /** @class */ (function () {\r\n    function AppConfig() {\r\n        this.appId = 'SalesforceCXoneAgent@niceincontact';\r\n        this.appSecret = 'MjIwNWFkODNmOTU3NDZiNWJiYTM0OGZiMmJjYTczZWI=';\r\n    }\r\n    return AppConfig;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AuthenticateSettings = /** @class */ (function () {\r\n    function AuthenticateSettings() {\r\n        this.isUserHub = false;\r\n        this.userHubLoginBaseUrl = 'https://auth.nice-incontact.com';\r\n        this.userHubNotificationUrl = 'https://na1-ws.nice-incontact.com/ws/notifications';\r\n        this.userHubWebBaseUrl = 'https://na1.nice-incontact.com';\r\n        this.centralTokenUrl = 'https://api.incontact.com/InContactAuthorizationServer/Token';\r\n        this.centralMyDomain = '';\r\n        this.forgotPassword = '';\r\n        this.resourceServerBaseURI = '';\r\n    }\r\n    // parse response from getCallCenterSettings and return AuthenticateSettings\r\n    // parse response from getCallCenterSettings and return AuthenticateSettings\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    AuthenticateSettings.prototype.parseAuthenticationSettings = \r\n    // parse response from getCallCenterSettings and return AuthenticateSettings\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var settings = new AuthenticateSettings();\r\n        /** @type {?} */\r\n        var authSettings = data;\r\n        /** @type {?} */\r\n        var icAuthUrl = (authSettings.icAuthorizationUrl__c) ? authSettings.icAuthorizationUrl__c : authSettings.icAuthorizationUrl__c;\r\n        /** @type {?} */\r\n        var authMode = authSettings.authMode__c ? authSettings.authMode__c : 'inContact';\r\n        settings.centralTokenUrl = icAuthUrl ? icAuthUrl : authSettings.inContactTokenServiceUri__c;\r\n        settings.isUserHub = (authMode && authMode.toLowerCase() === 'evolve' || authMode.toLowerCase() === 'userhub');\r\n        settings.userHubLoginBaseUrl = (authSettings.evolveAuthUrl__c) ? authSettings.evolveAuthUrl__c : authSettings.evolveAuthUrl__c;\r\n        settings.userHubNotificationUrl = (authSettings.evolveNotificationUrl__c) ? authSettings.evolveNotificationUrl__c\r\n            : authSettings.evolveNotificationUrl__c;\r\n        settings.userHubWebBaseUrl = (authSettings.evolveWebServerUrl__c) ? authSettings.evolveWebServerUrl__c\r\n            : authSettings.evolveWebServerUrl__c;\r\n        settings.centralMyDomain = (authSettings.icCustomDomain__c) ? authSettings.icCustomDomain__c : authSettings.icCustomDomain__c;\r\n        settings.forgotPassword = (authSettings.forgotPassword__c) ? authSettings.forgotPassword__c : authSettings.forgotPassword__c;\r\n        return settings;\r\n    };\r\n    return AuthenticateSettings;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LocalStorageService = /** @class */ (function () {\r\n    function LocalStorageService() {\r\n    }\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    LocalStorageService.prototype.get = /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return localStorage.getItem(key);\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\r\n    LocalStorageService.prototype.set = /**\r\n     * @param {?} key\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\r\n    function (key, val) {\r\n        return localStorage.setItem(key, val);\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    LocalStorageService.prototype.remove = /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return localStorage.removeItem(key);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LocalStorageService.prototype.clear = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return localStorage.clear();\r\n    };\r\n    LocalStorageService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */ LocalStorageService.ngInjectableDef = defineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: \"root\" });\r\n    return LocalStorageService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ValidationUtilsService = /** @class */ (function () {\r\n    function ValidationUtilsService() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ValidationUtilsService.prototype.isNotNullOrUndefined = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value !== 'null' && value !== null && value !== 'undefined' && value !== undefined) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ValidationUtilsService.prototype.isNotNullOrEmpty = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (this.isNotNullOrUndefined(value) && value !== '') {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ValidationUtilsService.prototype.isValidStationId = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var filter = /^[0-9]+$/;\r\n        return filter.test(value);\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ValidationUtilsService.prototype.isValidPhoneNumber = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var filter = /^(\\+?)([0-9#\\*])+$/;\r\n        if (filter.test(value) && value.length <= 30) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ValidationUtilsService.prototype.isNullOrEmpty = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return (value === undefined || value === null || value === '');\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ValidationUtilsService.prototype.isNotNullOrEmptyArray = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value === undefined || value === null || value === ''\r\n            || typeof value !== 'object' || !this.isNumber(value.length) || value.length === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ValidationUtilsService.prototype.isNumber = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return !isNaN(parseFloat(value)) && isFinite(value);\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ValidationUtilsService.prototype.isValidObject = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return value !== null && typeof value === 'object' && Object.keys(value).length > 0;\r\n    };\r\n    ValidationUtilsService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */ ValidationUtilsService.ngInjectableDef = defineInjectable({ factory: function ValidationUtilsService_Factory() { return new ValidationUtilsService(); }, token: ValidationUtilsService, providedIn: \"root\" });\r\n    return ValidationUtilsService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AccessTokenService = /** @class */ (function () {\r\n    function AccessTokenService(storageSvc, validationUtilSvc) {\r\n        this.storageSvc = storageSvc;\r\n        this.validationUtilSvc = validationUtilSvc;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AccessTokenService.prototype.getAccessToken = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var authToken = this.storageSvc.get(DatastoreKeys.AuthToken);\r\n        return JSON.parse(authToken);\r\n    };\r\n    /**\r\n     * @param {?} authToken\r\n     * @return {?}\r\n     */\r\n    AccessTokenService.prototype.setAccessToken = /**\r\n     * @param {?} authToken\r\n     * @return {?}\r\n     */\r\n    function (authToken) {\r\n        return this.storageSvc.set(DatastoreKeys.AuthToken, JSON.stringify(authToken));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AccessTokenService.prototype.isTokenExpired = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var authToken = this.getAccessToken();\r\n        if (this.validationUtilSvc.isNotNullOrEmpty(authToken)) {\r\n            // If the token is going to expire in another 2 mins then also we need to refresh token\r\n            return ((new Date().getTime() - authToken.accessTokenTime) / 1000) >= (authToken.expiresIn - (2 * 60));\r\n        }\r\n        return true;\r\n    };\r\n    AccessTokenService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    AccessTokenService.ctorParameters = function () { return [\r\n        { type: LocalStorageService },\r\n        { type: ValidationUtilsService }\r\n    ]; };\r\n    /** @nocollapse */ AccessTokenService.ngInjectableDef = defineInjectable({ factory: function AccessTokenService_Factory() { return new AccessTokenService(inject(LocalStorageService), inject(ValidationUtilsService)); }, token: AccessTokenService, providedIn: \"root\" });\r\n    return AccessTokenService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SessionStorageService = /** @class */ (function () {\r\n    function SessionStorageService() {\r\n    }\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    SessionStorageService.prototype.get = /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return sessionStorage.getItem(key);\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\r\n    SessionStorageService.prototype.set = /**\r\n     * @param {?} key\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\r\n    function (key, val) {\r\n        return sessionStorage.setItem(key, val);\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    SessionStorageService.prototype.remove = /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        return sessionStorage.removeItem(key);\r\n    };\r\n    SessionStorageService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */ SessionStorageService.ngInjectableDef = defineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: \"root\" });\r\n    return SessionStorageService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n */\r\nvar StorageService = /** @class */ (function () {\r\n    function StorageService() {\r\n    }\r\n    StorageService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */ StorageService.ngInjectableDef = defineInjectable({ factory: function StorageService_Factory() { return new StorageService(); }, token: StorageService, providedIn: \"root\" });\r\n    return StorageService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LogMonitorService = /** @class */ (function () {\r\n    function LogMonitorService(storageServiceSvc) {\r\n        this.storageServiceSvc = storageServiceSvc;\r\n    }\r\n    /**\r\n     * @param {?} log\r\n     * @return {?}\r\n     */\r\n    LogMonitorService.prototype.onLog = /**\r\n     * @param {?} log\r\n     * @return {?}\r\n     */\r\n    function (log) {\r\n        /** @type {?} */\r\n        var logStatements = this.storageServiceSvc.get(DatastoreKeys.AppLogs);\r\n        logStatements = logStatements ? logStatements : '';\r\n        // store in session storage\r\n        logStatements += this.getFormattedMessage(log);\r\n        this.storageServiceSvc.set(DatastoreKeys.AppLogs, logStatements);\r\n    };\r\n    /**\r\n     * @param {?} log\r\n     * @return {?}\r\n     */\r\n    LogMonitorService.prototype.getFormattedMessage = /**\r\n     * @param {?} log\r\n     * @return {?}\r\n     */\r\n    function (log) {\r\n        return log.timestamp + ' ' + NgxLoggerLevel[log.level] + ' [' + log.message + '] ' + log.additional + '\\n';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LogMonitorService.prototype.getAllLogs = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.storageServiceSvc.get(DatastoreKeys.AppLogs);\r\n    };\r\n    LogMonitorService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    LogMonitorService.ctorParameters = function () { return [\r\n        { type: StorageService }\r\n    ]; };\r\n    /** @nocollapse */ LogMonitorService.ngInjectableDef = defineInjectable({ factory: function LogMonitorService_Factory() { return new LogMonitorService(inject(StorageService)); }, token: LogMonitorService, providedIn: \"root\" });\r\n    return LogMonitorService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LoggerService = /** @class */ (function () {\r\n    function LoggerService(logger, storageService) {\r\n        this.logger = logger;\r\n        this.storageService = storageService;\r\n        this.logMonitorService = new LogMonitorService(storageService);\r\n        this.logger.registerMonitor(this.logMonitorService);\r\n    }\r\n    /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    LoggerService.prototype.trace = /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (moduleName, message) {\r\n        this.logger.trace(moduleName, message);\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    LoggerService.prototype.debug = /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (moduleName, message) {\r\n        this.logger.debug(moduleName, message);\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    LoggerService.prototype.info = /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (moduleName, message) {\r\n        this.logger.info(moduleName, message);\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    LoggerService.prototype.log = /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (moduleName, message) {\r\n        this.logger.log(moduleName, message);\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    LoggerService.prototype.warn = /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (moduleName, message) {\r\n        this.logger.warn(moduleName, message);\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    LoggerService.prototype.error = /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (moduleName, message) {\r\n        this.logger.error(moduleName, message);\r\n    };\r\n    /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    LoggerService.prototype.fatal = /**\r\n     * @param {?} moduleName\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (moduleName, message) {\r\n        this.logger.fatal(moduleName, message);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LoggerService.prototype.downloadLog = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var logStatements = this.logMonitorService.getAllLogs();\r\n        /** @type {?} */\r\n        var zip = new JSZip();\r\n        zip.file('app-logs.txt', logStatements);\r\n        zip.generateAsync({ type: 'blob' })\r\n            .then((/**\r\n         * @param {?} content\r\n         * @return {?}\r\n         */\r\n        function (content) {\r\n            saveAs(content, 'salesforce-logs.zip');\r\n        }));\r\n    };\r\n    LoggerService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    LoggerService.ctorParameters = function () { return [\r\n        { type: NGXLogger },\r\n        { type: SessionStorageService }\r\n    ]; };\r\n    /** @nocollapse */ LoggerService.ngInjectableDef = defineInjectable({ factory: function LoggerService_Factory() { return new LoggerService(inject(NGXLogger), inject(SessionStorageService)); }, token: LoggerService, providedIn: \"root\" });\r\n    return LoggerService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar URLUtilsService = /** @class */ (function () {\r\n    function URLUtilsService(logger) {\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * @param {?} url\r\n     * @param {?} map\r\n     * @return {?}\r\n     */\r\n    URLUtilsService.prototype.appendQueryString = /**\r\n     * @param {?} url\r\n     * @param {?} map\r\n     * @return {?}\r\n     */\r\n    function (url, map) {\r\n        /** @type {?} */\r\n        var queryString = '';\r\n        /** @type {?} */\r\n        var key = '';\r\n        for (key in map) {\r\n            if (map.hasOwnProperty(key)) {\r\n                if (queryString !== '') {\r\n                    queryString += '&';\r\n                }\r\n                queryString += key + '=' + encodeURIComponent(map[key]);\r\n            }\r\n        }\r\n        if (url.indexOf('?') === -1) {\r\n            url += (queryString === '') ? queryString : '?' + queryString;\r\n        }\r\n        else {\r\n            url += (queryString === '') ? queryString : '&' + queryString;\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * @param {?} queryStr\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    URLUtilsService.prototype.getParameterByName = /**\r\n     * @param {?} queryStr\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (queryStr, name) {\r\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n        /** @type {?} */\r\n        var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n        /** @type {?} */\r\n        var results = regex.exec(queryStr);\r\n        return results == null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n    };\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    URLUtilsService.prototype.isValidURL = /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    function (url) {\r\n        /** @type {?} */\r\n        var validURL = /((?:https?\\:\\/\\/|www\\.)(?:[-a-z0-9]+\\.)*[-a-z0-9]+.*)/i;\r\n        return validURL.test(url);\r\n    };\r\n    /**\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    URLUtilsService.prototype.addParamToQueryString = /**\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    function (params) {\r\n        /** @type {?} */\r\n        var queryString = window.location.search;\r\n        if (queryString === '') {\r\n            queryString = '?';\r\n        }\r\n        else {\r\n            queryString += '&';\r\n        }\r\n        queryString += params;\r\n        return queryString;\r\n    };\r\n    /**\r\n     * @param {?} queryString\r\n     * @return {?}\r\n     */\r\n    URLUtilsService.prototype.parseQueryString = /**\r\n     * @param {?} queryString\r\n     * @return {?}\r\n     */\r\n    function (queryString) {\r\n        /** @type {?} */\r\n        var params = {};\r\n        try {\r\n            if (typeof queryString !== 'string') {\r\n                return params;\r\n            }\r\n            if (queryString.charAt(0) === '?') {\r\n                queryString = queryString.slice(1);\r\n            }\r\n            if (queryString.length === 0) {\r\n                return params;\r\n            }\r\n            /** @type {?} */\r\n            var pairs = queryString.split('&');\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                /** @type {?} */\r\n                var pair = pairs[i].split('=');\r\n                params[pair[0]] = !!pair[1] ? decodeURIComponent(pair[1]) : null;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.logger.error(URLUtilsService.name, 'Error in parsing query string -' + e.message);\r\n        }\r\n        return params;\r\n    };\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    URLUtilsService.prototype.getHostName = /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    function (url) {\r\n        if (url) {\r\n            /** @type {?} */\r\n            var formattedUrl = new URL(url).hostname;\r\n            return formattedUrl;\r\n        }\r\n        return '';\r\n    };\r\n    /**\r\n     * @param {?} hostname\r\n     * @return {?}\r\n     */\r\n    URLUtilsService.prototype.isSFDomain = /**\r\n     * @param {?} hostname\r\n     * @return {?}\r\n     */\r\n    function (hostname) {\r\n        /** @type {?} */\r\n        var forceDomainPatt = /\\.force\\.com$/i;\r\n        /** @type {?} */\r\n        var visualforceDomainPatt = /\\.visualforce\\.com$/i;\r\n        // Salesforce Spring 18 release has this domain\r\n        /** @type {?} */\r\n        var sfDomainPatt = /\\.salesforce\\.com/i;\r\n        if (forceDomainPatt.test(hostname) || sfDomainPatt.test(hostname) || visualforceDomainPatt.test(hostname)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    URLUtilsService.prototype.parseUrl = /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    function (url) {\r\n        /** @type {?} */\r\n        var urlDom = document.createElement('a');\r\n        urlDom.href = url;\r\n        return {\r\n            search: urlDom.search\r\n        };\r\n    };\r\n    URLUtilsService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    URLUtilsService.ctorParameters = function () { return [\r\n        { type: LoggerService }\r\n    ]; };\r\n    /** @nocollapse */ URLUtilsService.ngInjectableDef = defineInjectable({ factory: function URLUtilsService_Factory() { return new URLUtilsService(inject(LoggerService)); }, token: URLUtilsService, providedIn: \"root\" });\r\n    return URLUtilsService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ParseUtil = /** @class */ (function () {\r\n    function ParseUtil() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ParseUtil.toBoolean = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return value !== null && value !== undefined && value.toLowerCase() === 'true';\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ParseUtil.toNumber = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value !== null && value !== undefined && isNaN(value) === false) {\r\n            return parseInt(value, 10);\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * @param {?} phoneNumber\r\n     * @return {?}\r\n     */\r\n    ParseUtil.formatPhoneNumber = /**\r\n     * @param {?} phoneNumber\r\n     * @return {?}\r\n     */\r\n    function (phoneNumber) {\r\n        /** @type {?} */\r\n        var format = /^(\\d{3})(\\d{3})(\\d{4})$/;\r\n        /** @type {?} */\r\n        var match = phoneNumber.match(format);\r\n        if (match) {\r\n            return phoneNumber.replace(format, '($1) $2-$3');\r\n        }\r\n        return phoneNumber;\r\n    };\r\n    return ParseUtil;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar LocalizationService = /** @class */ (function () {\r\n    function LocalizationService(translate) {\r\n        this.translate = translate;\r\n        this.supportedLangs = ['de', 'en_US', 'es', 'fr', 'it', 'ja', 'ko', 'pt_BR', 'ru', 'zh_CN'];\r\n        // list of supported languages\r\n        translate.addLangs(this.supportedLangs);\r\n        // set fallback language\r\n        translate.setDefaultLang('en_US');\r\n    }\r\n    /**\r\n     * @param {?} langCode\r\n     * @return {?}\r\n     */\r\n    LocalizationService.prototype.setLanguage = /**\r\n     * @param {?} langCode\r\n     * @return {?}\r\n     */\r\n    function (langCode) {\r\n        this.translate.use(langCode);\r\n    };\r\n    // Returns the localized value for the key if single key is passed\r\n    // Returns the key value pair of localization key and its translated value if multiple localization keys are passed\r\n    // Returns the localized value for the key if single key is passed\r\n    // Returns the key value pair of localization key and its translated value if multiple localization keys are passed\r\n    /**\r\n     * @param {?} localizationKey\r\n     * @return {?}\r\n     */\r\n    LocalizationService.prototype.getLocalizedValue = \r\n    // Returns the localized value for the key if single key is passed\r\n    // Returns the key value pair of localization key and its translated value if multiple localization keys are passed\r\n    /**\r\n     * @param {?} localizationKey\r\n     * @return {?}\r\n     */\r\n    function (localizationKey) {\r\n        return this.translate.get(localizationKey);\r\n    };\r\n    LocalizationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    LocalizationService.ctorParameters = function () { return [\r\n        { type: TranslateService }\r\n    ]; };\r\n    /** @nocollapse */ LocalizationService.ngInjectableDef = defineInjectable({ factory: function LocalizationService_Factory() { return new LocalizationService(inject(TranslateService)); }, token: LocalizationService, providedIn: \"root\" });\r\n    return LocalizationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { DatastoreKeys, AuthToken, AppConfig, AuthenticateSettings, AccessTokenService, LocalStorageService, SessionStorageService, StorageService, LoggerService, LogMonitorService, ValidationUtilsService, URLUtilsService, ParseUtil, LocalizationService };\n\n//# sourceMappingURL=common-lib.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { LoginSuccessComponent } from './login-success/login-success.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'loginSuccess', component: LoginSuccessComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\r\\n<router-outlet></router-outlet>\"","module.exports = \".hr-sep {\\n  margin: 10px 0px; }\\n\\n.btn-full_width {\\n  width: calc(100%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRpbmVzcy1hcHAvYW5ndWxhci9hdXRoLWFwcC9zcmMvYXBwL0M6XFxTb3VyY2VDb2RlXFxzZmRjLWVpbnN0ZWluLWFwcC1wYWNrYWdlXFxTRkVpbnN0ZWluL3JlYWRpbmVzcy1hcHBcXGFuZ3VsYXJcXGF1dGgtYXBwXFxzcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQ0osRUFBQTs7QUFDQTtFQUNJLGlCQUFpQixFQUFBIiwiZmlsZSI6InJlYWRpbmVzcy1hcHAvYW5ndWxhci9hdXRoLWFwcC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oci1zZXAge1xyXG4gICAgbWFyZ2luOiAxMHB4IDBweFxyXG59XHJcbi5idG4tZnVsbF93aWR0aCB7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlKVxyXG59Il19 */\"","import { Component } from '@angular/core';\r\nimport { LocalizationService } from 'common-lib';\r\nimport { ApexParams } from '../common/apex-params';\r\n\r\n@Component({\r\n  selector: 'auth-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'auth-app';\r\n\r\n  constructor(private localizationSvc: LocalizationService) {\r\n    const initParam = ApexParams.init();\r\n    this.localizationSvc.setLanguage(initParam.langCode);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { environment } from '../environments/environment';\r\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { ApexParams } from '../common/apex-params';\r\nimport { LoginSuccessComponent } from './login-success/login-success.component';\r\n\r\nconst initParam = ApexParams.init();\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    LoginSuccessComponent\r\n  ],\r\n  imports: [\r\n    LoggerModule.forRoot({ level: NgxLoggerLevel.DEBUG }),\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (http: HttpClient) => new TranslateHttpLoader(http, initParam.resourceBase + '/assets/i18n/'),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  providers: [{provide: 'AuthenticationService', useClass: environment.authenticationService}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".login-form {\\r\\n    height: 100%;\\r\\n    height: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\\r\\n}\\r\\n.errorBox {\\r\\n    display: block;\\r\\n    white-space: pre;\\r\\n    border: 2px solid rgb(231, 4, 4);\\r\\n    padding: 0 1em 0 1em;\\r\\n    margin: 1em;\\r\\n    background-color: rgb(252, 137, 152);\\r\\n    color: black;\\r\\n    height: 50px;\\r\\n    font-size: 18px;\\r\\n}\\r\\n.successBox {\\r\\n    display: block;\\r\\n    white-space: pre;\\r\\n    border: 2px solid rgb(116, 130, 195);\\r\\n    padding: 0 1em 0 1em;\\r\\n    margin: 1em;\\r\\n    background-color: rgb(140, 189, 230);\\r\\n    color: black;\\r\\n    height: 150px;\\r\\n    font-size: 18px;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRpbmVzcy1hcHAvYW5ndWxhci9hdXRoLWFwcC9zcmMvYXBwL2xvZ2luLXN1Y2Nlc3MvbG9naW4tc3VjY2Vzcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLDhCQUE4QixHQUFHLDZDQUE2QztBQUNsRjtBQUNBO0lBQ0ksY0FBYztJQUNkLGdCQUFnQjtJQUNoQixnQ0FBZ0M7SUFDaEMsb0JBQW9CO0lBQ3BCLFdBQVc7SUFDWCxvQ0FBb0M7SUFDcEMsWUFBWTtJQUNaLFlBQVk7SUFDWixlQUFlO0FBQ25CO0FBQ0E7SUFDSSxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLG9DQUFvQztJQUNwQyxvQkFBb0I7SUFDcEIsV0FBVztJQUNYLG9DQUFvQztJQUNwQyxZQUFZO0lBQ1osYUFBYTtJQUNiLGVBQWU7SUFDZixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InJlYWRpbmVzcy1hcHAvYW5ndWxhci9hdXRoLWFwcC9zcmMvYXBwL2xvZ2luLXN1Y2Nlc3MvbG9naW4tc3VjY2Vzcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWZvcm0ge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOyAgLyogTW96aWxsYS1iYXNlZCBicm93c2VycyB3aWxsIGlnbm9yZSB0aGlzLiAqL1xyXG59XHJcbi5lcnJvckJveCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdoaXRlLXNwYWNlOiBwcmU7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMjMxLCA0LCA0KTtcclxuICAgIHBhZGRpbmc6IDAgMWVtIDAgMWVtO1xyXG4gICAgbWFyZ2luOiAxZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUyLCAxMzcsIDE1Mik7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuLnN1Y2Nlc3NCb3gge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aGl0ZS1zcGFjZTogcHJlO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgcmdiKDExNiwgMTMwLCAxOTUpO1xyXG4gICAgcGFkZGluZzogMCAxZW0gMCAxZW07XHJcbiAgICBtYXJnaW46IDFlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxNDAsIDE4OSwgMjMwKTtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIGhlaWdodDogMTUwcHg7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"login-form slds-box slds-grid slds-grid_vertical slds-grid_vertical-align-center slds-size-full\\\"\\r\\n  [style.background-image]=\\\"getBackground()\\\">\\r\\n  <div *ngIf=\\\"errorMessage.authSettingsError\\\" class=\\\"errorBox\\\" role=\\\"status\\\">\\r\\n    <p>{{errorMsg}}</p>\\r\\n  </div>\\r\\n  <div class=\\\"successBox\\\" role=\\\"status\\\">\\r\\n    <p>\\r\\n      Login Successful!\\r\\n    </p>\\r\\n    <p *ngIf=\\\"createUser\\\">Creating API Integration User. User Name : {{userName}}</p>\\r\\n    <p *ngIf=\\\"createUserSuccess\\\">User created Successfully! User Name : {{userName}}</p>\\r\\n    <p *ngIf=\\\"createAccesskey\\\">Creating Access key and access secret for the user...</p>\\r\\n    <p *ngIf=\\\"accessKeySuccess\\\">\\r\\n      Access key and Secret key saved to custom Metadata Settings!\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport {\r\n\tAccessTokenService, LocalStorageService, SessionStorageService,\r\n\tLoggerService, URLUtilsService, ValidationUtilsService, DatastoreKeys\r\n} from 'common-lib';\r\nimport { NavigationUtilService } from '../../services/navigation-util.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ErrorMessage } from '../../model/error-message.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ApexParams } from '../../common/apex-params';\r\nimport { HttpWrapperService } from '../../services/http-wrapper.service';\r\n\r\n@Component({\r\n\tselector: 'auth-login-success',\r\n\ttemplateUrl: './login-success.component.html',\r\n\tstyleUrls: ['./login-success.component.css']\r\n})\r\nexport class LoginSuccessComponent implements OnInit {\r\n\r\n\r\n\tconstructor(@Inject('AuthenticationService') private authService: AuthenticationService,\r\n\t\tprivate accessTokenSvc: AccessTokenService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate localStorageSvc: LocalStorageService,\r\n\t\tprivate sessionStorageSvc: SessionStorageService,\r\n\t\tprivate logger: LoggerService,\r\n\t\tprivate urlUtilSvc: URLUtilsService,\r\n\t\tprivate validationUtilSvc: ValidationUtilsService,\r\n\t\tprivate navigationUtilSvc: NavigationUtilService,\r\n\t\tprivate sanitizer: DomSanitizer,\r\n\t\tprivate httpWrapper: HttpWrapperService) { }\r\n\r\n\tinitParam: ApexParams;\r\n\tcreateUser = false;\r\n\tcreateUserSuccess = false;\r\n\tcreateAccesskey = false;\r\n\taccessKeySuccess = false;\r\n\tuserName: String;\r\n\terrorMsg: any;\r\n\terrorMessage = new ErrorMessage();\r\n\r\n\tngOnInit() {\r\n\t\tthis.initParam = ApexParams.init();\r\n\t\tif (this.isCentral()) {\r\n\t\t\tthis.userRegistrationCentral();\r\n\t\t} else {\r\n\t\t\tthis.getTenatId();\r\n\t\t\tthis.userRegistrationUH();\r\n\t\t}\r\n\t}\r\n\tgetTenatId() {\r\n\t\tthis.authService.getTenatId().then(\r\n\t\t\t(response) => {\r\n\t\t\t\tthis.localStorageSvc.set(DatastoreKeys.TenantId, response.tenantId);\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'getTenatId success: tennantId:: ' + response.tenantId);\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'getTenatId error' + error);\r\n\t\t\t\tthis.errorMessage.authSettingsError = error;\r\n\t\t\t\tthis.errorMsg = error;\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate userRegistrationCentral() {\r\n\t\tthis.logger.debug(LoginSuccessComponent.name, 'inside userRegistrationCentral');\r\n\t\tconst buName = this.accessTokenSvc.getAccessToken().businessUnit;\r\n\t\tconst userName = 'Albert@' + buName + '.com';\r\n\t\tthis.createUser = true;\r\n\t\tthis.userName = userName;\r\n\r\n\t\tthis.authService.getAgentInfo(this.localStorageSvc.get(DatastoreKeys.AdminUserName)).then(\r\n\t\t\t(response) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'userRegistrationCentral in login component - ' + JSON.stringify(response));\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\t\"agents\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"firstName\": \"Albert\",\r\n\t\t\t\t\t\t\t\"lastName\": \"Einstein\",\r\n\t\t\t\t\t\t\t\"emailAddress\": response.emailAddress,\r\n\t\t\t\t\t\t\t\"country\": response.country,\r\n\t\t\t\t\t\t\t\"profileId\": response.profileId,\r\n\t\t\t\t\t\t\t\"teamId\": response.teamId.toString(),\r\n\t\t\t\t\t\t\t\"userName\": userName,\r\n\t\t\t\t\t\t\t\"timeZone\": response.timeZone,\r\n\t\t\t\t\t\t\t\"city\": response.city,\r\n\t\t\t\t\t\t\t//\"Password\" : \"Password\",\r\n\t\t\t\t\t\t\t\"userType\": \"Agent\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t};\r\n\t\t\t\tthis.authService.userRegistration(payload, this.localStorageSvc.get(DatastoreKeys.EvolveWebServerUrl)).then(\r\n\t\t\t\t\t(response) => {\r\n\t\t\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'userRegistrationCentral in login component - ' + JSON.stringify(response));\r\n\t\t\t\t\t\tif (response.errorCount == 0) {\r\n\t\t\t\t\t\t\tthis.localStorageSvc.set(DatastoreKeys.NewUserId, response.agentResults[0].agentId);\r\n\t\t\t\t\t\t\tthis.createUser = false;\r\n\t\t\t\t\t\t\tthis.createUserSuccess = true;\r\n\t\t\t\t\t\t\tthis.createAccessKeyAPI();\r\n\t\t\t\t\t\t} else if (response.errorCount == 1) {\r\n\t\t\t\t\t\t\tif (response.agentResults[0].error.indexOf('unique') != -1) {\r\n\t\t\t\t\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'userRegistrationCentral : User already created.');\r\n\t\t\t\t\t\t\t\tthis.createUser = false;\r\n\t\t\t\t\t\t\t\tthis.createUserSuccess = true;\r\n\t\t\t\t\t\t\t\tthis.authService.getAgentInfo(userName).then(\r\n\t\t\t\t\t\t\t\t\t(response) => {\r\n\t\t\t\t\t\t\t\t\t\tthis.localStorageSvc.set(DatastoreKeys.NewUserId, response.agentId);\r\n\t\t\t\t\t\t\t\t\t\tthis.createAccessKeyAPI();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'userRegistrationCentral error' + error);\r\n\t\t\t\t\t\tthis.errorMessage.authSettingsError = response.agentResults[0].error;\r\n\t\t\t\t\t\tthis.errorMsg = response.agentResults[0].error;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'userRegistrationCentral error' + error);\r\n\t\t\t\tthis.errorMessage.authSettingsError = error;\r\n\t\t\t\tthis.errorMsg = error;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tprivate userRegistrationUH() {\r\n\t\tthis.logger.debug(LoginSuccessComponent.name, 'inside userRegistrationUH');\r\n\t\tconst buName = this.accessTokenSvc.getAccessToken().businessUnit;\r\n\t\tconst userName = 'Albert@' + buName + '.com';\r\n\t\tthis.createUser = true;\r\n\t\tthis.userName = userName;\r\n\r\n\t\tthis.authService.getUserInfo(userName).then(\r\n\t\t\t(response) => {\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\t\"firstName\": \"Albert\",\r\n\t\t\t\t\t\"lastName\": \"Einstein\",\r\n\t\t\t\t\t\"emailAddress\": response.adminUser.emailAddress,\r\n\t\t\t\t\t\"country\": response.adminUser.country,\r\n\t\t\t\t\t\"role\": \"Agent\",\r\n\t\t\t\t\t\"userName\": userName\r\n\t\t\t\t};\r\n\t\t\t\tif(response.NewUserId!= '') {\r\n\t\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'userRegistrationUH: User already present');\r\n\t\t\t\t\tthis.localStorageSvc.set(DatastoreKeys.NewUserId, response.NewUserId);\r\n\t\t\t\t\tthis.createUser = false;\r\n\t\t\t\t\tthis.createUserSuccess = true;\r\n\t\t\t\t\tif(response.status !== 'ACTIVE') {\r\n\t\t\t\t\t\tthis.activateUser(userName, this.localStorageSvc.get(DatastoreKeys.AdminUserName).toLowerCase());\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.createAccessKeyAPI();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.authService.userRegistration(payload, this.localStorageSvc.get(DatastoreKeys.EvolveWebServerUrl)).then(\r\n\t\t\t\t\t\t(response) => {\r\n\t\t\t\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'userRegistrationUH in login component - ' + JSON.stringify(response));\r\n\t\t\t\t\t\t\tthis.localStorageSvc.set(DatastoreKeys.NewUserId, response.uuid);\r\n\t\t\t\t\t\t\tthis.createUser = false;\r\n\t\t\t\t\t\t\tthis.createUserSuccess = true;\r\n\t\t\t\t\t\t\tthis.activateUser(userName, this.localStorageSvc.get(DatastoreKeys.AdminUserName).toLowerCase());\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'userRegistrationUH error' + error);\r\n\t\t\t\t\t\t\tthis.errorMessage.authSettingsError = error.error.details;\r\n\t\t\t\t\t\t\tthis.errorMsg = error.error.details;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'getUserInfo error' + error);\r\n\t\t\t\tthis.errorMessage.authSettingsError = error.error.details;\r\n\t\t\t\tthis.errorMsg = error.error.details;\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t}\r\n\tactivateUser(emailAddressesList: string, senderEmail: string) {\r\n\t\tthis.logger.debug(LoginSuccessComponent.name, 'inside activateUser');\r\n\t\tthis.authService.activateUser(emailAddressesList, senderEmail).then(\r\n\t\t\t(response) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'activateUser in login success component : Activation mail sent to the Admin User!');\r\n\t\t\t\tthis.createAccessKeyAPI();\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'activateUser error' + error);\r\n\t\t\t\tthis.errorMessage.authSettingsError = error;\r\n\t\t\t\tthis.errorMsg = error;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tcreateAccessKeyAPI() {\r\n\t\tthis.logger.debug(LoginSuccessComponent.name, 'inside createAccessKeyAPI');\r\n\t\tthis.createAccesskey = true;\r\n\t\tthis.authService.createAccessKeyAPI(this.localStorageSvc.get(DatastoreKeys.EvolveWebServerUrl)).then(\r\n\t\t\t(response) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'createAccessKeyAPI in login success component - ' + JSON.stringify(response));\r\n\t\t\t\tthis.localStorageSvc.set(DatastoreKeys.AccessSecretKey, JSON.stringify(response));\r\n\t\t\t\tthis.createAccesskey = false;\r\n\t\t\t\tthis.storeAccessAndSecretKey();\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'createAccessKeyAPI error' + error);\r\n\t\t\t\tthis.errorMessage.authSettingsError = error;\r\n\t\t\t\tthis.errorMsg = error;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\tstoreAccessAndSecretKey() {\r\n\t\tthis.logger.debug(LoginSuccessComponent.name, 'inside storeAccessAndSecretKey');\r\n\t\tthis.authService.storeAccessAndSecretKey().then(\r\n\t\t\t(response) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'storeAccessAndSecretKey in login component - ' + JSON.stringify(response));\r\n\t\t\t\tconsole.log(\"woooo... I acheived it!\");\r\n\t\t\t\tthis.accessKeySuccess = true;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthis.logger.debug(LoginSuccessComponent.name, 'storeAccessAndSecretKey error' + error);\r\n\t\t\t\tthis.errorMessage.authSettingsError = error;\r\n\t\t\t\tthis.errorMsg = error;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgetBackground() {\r\n\t\tconst image = this.initParam.resourceBase + '/assets/images/background-pattern.svg';\r\n\t\treturn this.sanitizer.bypassSecurityTrustStyle(`url(${image}),linear-gradient(rgba(0, 158, 218), rgba(0, 124, 190))`);\r\n\t}\r\n\r\n\tisCentral() {\r\n\t\treturn this.localStorageSvc.get(DatastoreKeys.EvolveWebServerUrl) === 'Central';\r\n\t}\r\n\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function EmailValidator(control: AbstractControl) {\r\n    const emailPattern = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n    const isValid = emailPattern.test(control.value);\r\n    return isValid ? null : { 'forbiddenName': true};\r\n}\r\n","module.exports = \"<div *ngIf=\\\"showLogin\\\">\\r\\n<div *ngIf=\\\"errorMessage.authSettingsError || errorMessage.refreshTokenError\\\" class=\\\"slds-box slds-clearfix\\\">\\r\\n  <div role=\\\"alert\\\">{{errorMessage.authSettingsError || errorMessage.refreshTokenError}}</div>\\r\\n  <button class=\\\"slds-button slds-button_neutral slds-m-top_x-small slds-float_right\\\" (click)='hideAuthSettingsError()'>{{'ok' | translate}}</button>\\r\\n</div>\\r\\n\\r\\n<div  *ngIf=\\\"errorMessage.callCenterError\\\"  class=\\\"slds-notify_container slds-is-relative\\\">\\r\\n  <div class=\\\"errorBox\\\" role=\\\"status\\\">\\r\\n    An error occurred while configuring the Call Center for authentication. <br/> Please contact your system adminstrator.\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"slds-spinner_container\\\" *ngIf=\\\"canShowSpinner\\\">\\r\\n  <div class=\\\"slds-align_absolute-center\\\">\\r\\n      <div class=\\\"slds-spinner slds-spinner_medium slds-spinner_brand\\\" role=\\\"status\\\">\\r\\n          <div class=\\\"slds-spinner__dot-a\\\"></div>\\r\\n          <div class=\\\"slds-spinner__dot-b\\\"></div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"isExternalAuthenticationEnabled || isCentralAuthenticationEnabled\\\" class=\\\"login-form slds-box slds-grid slds-grid_vertical slds-grid_vertical-align-center slds-size-full\\\" [style.background-image]=\\\"getBackground()\\\">\\r\\n  <div id=\\\"signInLabel\\\" class=\\\"slds-col slds-size_1-of-1 slds-small-size_1-of-1 slds-medium-size_2-of-3 slds-large-size_1-of-3 slds-p-bottom_medium slds-border_bottom slds-text-heading_small\\\">{{'signIn' | translate}}</div>  \\r\\n  <div *ngIf=\\\"isExternalAuthenticationEnabled\\\" class=\\\"slds-col slds-size_1-of-1 slds-small-size_1-of-1 slds-medium-size_2-of-3 slds-large-size_1-of-3 slds-p-top_medium\\\">\\r\\n    <div id=\\\"ssoHeader\\\" class=\\\"slds-text-align_left\\\">{{'ssoLoginInfo' | translate}}</div>\\r\\n    <div id=\\\"ssoErrorMessage\\\" class=\\\"slds-p-top_medium slds-col slds-size_1-of-1 slds-small-size_1-of-1 slds-medium-size_2-of-3 slds-large-size_1-of-3 errorMessage slds-text-color_error\\\" *ngIf=\\\"errorMessage.idpError\\\" role=\\\"alert\\\">{{ errorMessage.idpError }}</div>\\r\\n    <div class=\\\"slds-col slds-p-top_medium slds-p-bottom_medium\\\">\\r\\n      <button (click)=\\\"authenticateIdp()\\\" id=\\\"companySignIn\\\" class=\\\"slds-button slds-button_brand slds-size_1-of-1 slds-small-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-1\\\">{{'companySignIn' | translate}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=\\\"orLabel\\\" class=\\\"slds-p-top_medium slds-text-align_center\\\" *ngIf=\\\"isExternalAuthenticationEnabled && isCentralAuthenticationEnabled\\\">{{'or' | translate}}</div>\\r\\n  <form id=\\\"loginForm\\\" [formGroup]=\\\"loginForm\\\" *ngIf=\\\"isCentralAuthenticationEnabled\\\" class=\\\"slds-col slds-grid slds-grid_vertical slds-size_1-of-1 slds-small-size_1-of-1 slds-medium-size_2-of-3 slds-large-size_1-of-3 slds-p-top_medium\\\">\\r\\n    <div id=\\\"centralHeader\\\" class=\\\"slds-text-align_left\\\" *ngIf=\\\"isExternalAuthenticationEnabled\\\">{{'centralLoginInfo' | translate}}</div>\\r\\n    <div id=\\\"centralErrorMessage\\\" class=\\\"slds-m-top_x-small\\\" *ngIf=\\\"username.invalid && username.touched\\\">\\r\\n      <div *ngIf=\\\"username.errors?.required\\\" role=\\\"alert\\\">\\r\\n          <div id=\\\"requiredErrorMsg\\\" class=\\\"slds-text-color_error\\\">{{'usernameRequired' | translate}}</div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!username.errors?.required && username.errors?.forbiddenName\\\" role=\\\"alert\\\">\\r\\n          <div id=\\\"invalidErrorMsg\\\" class=\\\"slds-text-color_error\\\">{{'usernameIsNotValid' | translate}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"slds-m-top_x-small\\\" *ngIf=\\\"errorMessage?.centralError\\\" role=\\\"alert\\\">\\r\\n      <div id=\\\"errorMsgFromAPI\\\" class=\\\"slds-text-color_error\\\">{{errorMessage.centralError}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"slds-form-element slds-p-top_medium\\\">\\r\\n      <label id=\\\"usernameLabel\\\" class=\\\"slds-form-element__label\\\">{{'username' | translate}}</label>\\r\\n      <div class=\\\"slds-form-element__control\\\">\\r\\n        <input id=\\\"username\\\" class=\\\"slds-input\\\" type=\\\"text\\\" formControlName=\\\"username\\\" placeholder=\\\"{{'username' | translate}}\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"slds-form-element slds-p-top_medium\\\">\\r\\n      <label id=\\\"passwordLabel\\\" class=\\\"slds-form-element__label\\\">{{'password' | translate}}</label>\\r\\n      <div class=\\\"slds-form-element__control slds-input-has-icon slds-input-has-icon_right\\\">\\r\\n        <input id=\\\"password\\\" class=\\\"slds-input\\\" [type]=\\\"canShowPwd ? 'text' : 'password'\\\" placeholder=\\\"{{'password' | translate}}\\\" formControlName=\\\"password\\\" />\\r\\n        <button id=\\\"previewIcon\\\" class=\\\"slds-button slds-button_icon slds-input__icon slds-input__icon_right\\\" (click)=\\\"togglePassword()\\\">\\r\\n          <svg class=\\\"slds-button__icon slds-icon-text-light\\\" aria-hidden=\\\"true\\\">\\r\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" attr.xlink:href=\\\"/_slds/icons/utility-sprite/svg/symbols.svg#{{pwdIcon}}\\\" />\\r\\n          </svg>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"slds-form-element slds-p-top_medium\\\">\\r\\n      <div class=\\\"slds-form-element__control slds-input-has-icon slds-input-has-icon_right\\\">\\r\\n        <select formControlName=\\\"area\\\" class=\\\"slds-input\\\">\\r\\n          <option *ngFor=\\\"let area of areaMapping\\\" [ngValue]=\\\"area.name\\\" >\\r\\n            {{ area.abbrev }}\\r\\n          </option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"slds-form-element slds-p-top_medium\\\">\\r\\n      <div class=\\\"slds-form-element__control\\\">\\r\\n        <div class=\\\"slds-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" name=\\\"rememberMe\\\" formControlName=\\\"rememberMe\\\" id=\\\"rememberMe\\\"  />\\r\\n          <label class=\\\"slds-checkbox__label\\\" for=\\\"rememberMe\\\">\\r\\n            <span class=\\\"slds-checkbox_faux\\\"></span>\\r\\n            <span id=\\\"rememberMeLabel\\\" class=\\\"slds-form-element__label\\\">{{'rememberMe' | translate}}</span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"slds-p-top_medium slds-p-bottom_medium\\\">\\r\\n      <button id=\\\"signInButton\\\" class=\\\"slds-button slds-button_brand slds-size_1-of-1 slds-small-size_1-of-1 slds-medium-size_1-of-1 slds-large-size_1-of-1\\\" (click)=\\\"authenticateUser()\\\" [disabled]=\\\"canDisableSignIn()\\\">{{'signIn' | translate}}</button>\\r\\n    </div>\\r\\n  </form>\\r\\n  <div class=\\\"slds-col slds-size_1-of-1 slds-small-size_1-of-1 slds-medium-size_2-of-3 slds-large-size_1-of-3 slds-p-top_medium slds-border_top slds-text-align_center\\\" *ngIf=\\\"isForgotPassword\\\">\\r\\n    <a class=\\\"slds-button\\\" role=\\\"button\\\" id=\\\"forgotPassword\\\" (click)=\\\"recoverPassword()\\\">{{'forgotPwd' | translate}}?</a>\\r\\n  </div>\\r\\n  <div class=\\\"slds-col_bump-top slds-size_1-of-1 slds-small-size_1-of-1 slds-medium-size_2-of-3 slds-large-size_1-of-3\\\">\\r\\n    <img class=\\\"slds-float_right\\\" src=\\\"{{initParam.resourceBase}}/assets/images/branding-logo.svg\\\">\\r\\n  </div>\\r\\n</div>\\r\\n</div>\"","module.exports = \".errorMessage {\\n  word-break: break-word; }\\n\\n.login-form {\\n  height: 100%;\\n  height: -webkit-fill-available;\\n  /* Mozilla-based browsers will ignore this. */ }\\n\\n.errorBox {\\n  display: block;\\n  white-space: pre;\\n  border: 2px solid #c77;\\n  padding: 0 1em 0 1em;\\n  margin: 1em;\\n  background-color: #fdd;\\n  color: black;\\n  height: 70px;\\n  font-size: 18px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRpbmVzcy1hcHAvYW5ndWxhci9hdXRoLWFwcC9zcmMvYXBwL2xvZ2luL0M6XFxTb3VyY2VDb2RlXFxzZmRjLWVpbnN0ZWluLWFwcC1wYWNrYWdlXFxTRkVpbnN0ZWluL3JlYWRpbmVzcy1hcHBcXGFuZ3VsYXJcXGF1dGgtYXBwXFxzcmNcXGFwcFxcbG9naW5cXGxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksc0JBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksWUFBWTtFQUNaLDhCQUE4QjtFQUFHLDZDQUFBLEVBQThDOztBQUduRjtFQUNJLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsc0JBQXNCO0VBQ3RCLG9CQUFvQjtFQUNwQixXQUFXO0VBQ1gsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixZQUFZO0VBQ1osZUFBZSxFQUFBIiwiZmlsZSI6InJlYWRpbmVzcy1hcHAvYW5ndWxhci9hdXRoLWFwcC9zcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5lcnJvck1lc3NhZ2Uge1xyXG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcclxufVxyXG5cclxuLmxvZ2luLWZvcm0ge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOyAgLyogTW96aWxsYS1iYXNlZCBicm93c2VycyB3aWxsIGlnbm9yZSB0aGlzLiAqL1xyXG59XHJcblxyXG4uZXJyb3JCb3gge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aGl0ZS1zcGFjZTogcHJlO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgI2M3NztcclxuICAgIHBhZGRpbmc6IDAgMWVtIDAgMWVtO1xyXG4gICAgbWFyZ2luOiAxZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRkO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgaGVpZ2h0OiA3MHB4O1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { EmailValidator } from './email-validator';\r\nimport { ApexParams } from './../../common/apex-params';\r\nimport {\r\n\tAuthToken,\r\n\tAccessTokenService,\r\n\tLocalStorageService,\r\n\tDatastoreKeys,\r\n\tValidationUtilsService,\r\n\tURLUtilsService,\r\n\tSessionStorageService,\r\n\tLoggerService,\r\n\tAuthenticateSettings\r\n} from 'common-lib';\r\nimport { OpenIDConfig } from '../../model/open-id-config.model';\r\nimport { ErrorMessage } from '../../model/error-message.model';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport * as LCC from 'lightning-container';\r\nimport { SELECT_VALUE_ACCESSOR } from '@angular/forms/src/directives/select_control_value_accessor';\r\nimport { NavigationUtilService } from '../../services/navigation-util.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n\tselector: 'auth-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: [ './login.component.scss' ]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\tprivate authSettings: AuthenticateSettings;\r\n\tprivate openIDConfig: OpenIDConfig;\r\n\tprivate openIdAuthRequestStateParam: number;\r\n\tprivate defaultPwdIcon = 'preview';\r\n\tinitParam: ApexParams;\r\n\r\n\tloginForm: any;\r\n\tshowLogin = true;\r\n\tisExternalAuthenticationEnabled = false;\r\n\tisCentralAuthenticationEnabled = false;\r\n\terrorMessage = new ErrorMessage();\r\n\tcanShowPwd = false;\r\n\tcanShowSpinner = true;\r\n\tpwdIcon = this.defaultPwdIcon;\r\n\tisForgotPassword = false;\r\n\tareaURLs: any;\r\n\tareaMapping = [\r\n\t\t{name: 'na1', abbrev: 'North America'},\r\n\t\t{name: 'au1', abbrev: 'Australia'},\r\n\t\t{name: 'eu1', abbrev: 'Frankfurt'},\r\n\t\t{name: 'Central', abbrev: 'Central'},\r\n\t\t{name: 'naDev', abbrev: 'North America Dev'},\r\n\t];\r\n\r\n\tselectedArea: any = 'na1';\r\n\tisCentral: Boolean;\r\n\r\n\tget username() {\r\n\t\treturn this.loginForm.get('username');\r\n\t}\r\n\r\n\tget password() {\r\n\t\treturn this.loginForm.get('password');\r\n\t}\r\n\r\n\tget rememberMe() {\r\n\t\treturn this.loginForm.get('rememberMe');\r\n\t}\r\n\r\n\tget area() {\r\n\t\treturn this.loginForm.get('area');\r\n\t}\r\n\r\n\tconstructor(\r\n\t\t@Inject('AuthenticationService') private authService: AuthenticationService,\r\n\t\tprivate accessTokenSvc: AccessTokenService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate localStorageSvc: LocalStorageService,\r\n\t\tprivate sessionStorageSvc: SessionStorageService,\r\n\t\tprivate logger: LoggerService,\r\n\t\tprivate urlUtilSvc: URLUtilsService,\r\n\t\tprivate validationUtilSvc: ValidationUtilsService,\r\n\t\tprivate navigationUtilSvc: NavigationUtilService,\r\n\t\tprivate sanitizer: DomSanitizer\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.logger.log(LoginComponent.name, 'Login component initialize');\r\n\t\tthis.initParam = ApexParams.init();\r\n\t\tthis.createLoginForm();\r\n\r\n\t\tthis.canShowSpinner = false;\r\n\t\tthis.isCentralAuthenticationEnabled = true;\r\n\t\tthis.areaURLs =  {\r\n\t\t\t'na1': 'https://na1.nice-incontact.com',\r\n\t\t\t'au1': 'https://au1.nice-incontact.com',\r\n\t\t\t'eu1': 'https://eu1.niceincontact.com',\r\n\t\t\t'Central': 'Central',\r\n\t\t\t'naDev': 'https://na1.dev.nice-incontact.com'\r\n\t\t  };\r\n\t}\r\n\r\n\tprivate createLoginForm() {\r\n\t\tthis.logger.log(LoginComponent.name, 'Create login Form');\r\n\t\tlet username = '';\r\n\t\tlet rememberMe = false;\r\n\t\tlet area = 'na1';\r\n\r\n\t\tif (this.validationUtilSvc.isNotNullOrUndefined(this.initParam.icUsername)) {\r\n\t\t\tusername = this.initParam.icUsername;\r\n\t\t}\r\n\t\tif (this.validationUtilSvc.isNotNullOrUndefined(this.initParam.icRememberMe)) {\r\n\t\t\trememberMe = this.initParam.icRememberMe;\r\n\t\t}\r\n\t\tthis.loginForm = this.fb.group({\r\n\t\t\tusername: [ username, [ Validators.required, EmailValidator ] ],\r\n\t\t\tpassword: [ '', [ Validators.required ] ],\r\n\t\t\trememberMe: [ rememberMe ],\r\n\t\t\tarea: [area]\r\n\t\t});\r\n\t}\r\n\r\n\ttogglePassword() {\r\n\t\tthis.canShowPwd = !this.canShowPwd;\r\n\t\tthis.pwdIcon = this.canShowPwd ? 'hide' : this.defaultPwdIcon;\r\n\t\tthis.logger.debug(LoginComponent.name, 'toggle password ' + this.canShowPwd);\r\n\t}\r\n\r\n\tcanDisableSignIn(): boolean {\r\n\t\tlet disable = true;\r\n\t\tif (this.username.errors === null && this.password.errors === null && this.area.errors === null) {\r\n\t\t\tdisable = false;\r\n\t\t}\r\n\t\treturn disable;\r\n\t}\r\n\r\n\tauthenticateUser() {\r\n\t\tthis.logger.log(LoginComponent.name, 'Authenticate user entry');\r\n\t\tthis.errorMessage.centralError = '';\r\n\t\tconst areaUrl = this.areaURLs[this.area.value];\r\n\r\n\t\tthis.localStorageSvc.set(DatastoreKeys.EvolveWebServerUrl, areaUrl);\r\n\t\tthis.authService.authenticateUser(this.username.value, this.password.value, areaUrl).then(\r\n\t\t\t(response: AuthToken) => {\r\n\t\t\t\tthis.logger.debug(LoginComponent.name, 'Authenticate user success ' + response);\r\n\t\t\t\tthis.accessTokenSvc.setAccessToken(response);\r\n\t\t\t\tthis.localStorageSvc.set(DatastoreKeys.AdminUserName, this.username.value);\r\n\t\t\t\tthis.navigationUtilSvc.navigate(['/loginSuccess']);\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthis.logger.error(LoginComponent.name, 'Authenticate user error ' + error);\r\n\t\t\t\tthis.errorMessage.centralError = error;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tprivate redirectToSFComp() {\r\n\t\tthis.loginForm = false;\r\n\t\twindow.location.href =\r\n\t\t\twindow.location.ancestorOrigins[0] +\r\n\t\t\t'/lightning/n/' +\r\n\t\t\tthis.initParam.namespacePrefix +\r\n\t\t\t'__InContact_Analytics?c__login=success';\r\n\t}\r\n\r\n\r\n\trecoverPassword() {\r\n\t\twindow.open(\r\n\t\t\tthis.authSettings.forgotPassword,\r\n\t\t\t'targetWindow',\r\n\t\t\t'scrollbars=yes, resizable=yes, width=600px, height=600px, left=400px, top=40px'\r\n\t\t);\r\n\t}\r\n\r\n\thideAuthSettingsError() {\r\n\t\tthis.errorMessage.authSettingsError = '';\r\n\t}\r\n\r\n\tgetBackground() {\r\n\t\tconst image = this.initParam.resourceBase + '/assets/images/background-pattern.svg';\r\n\t\treturn this.sanitizer.bypassSecurityTrustStyle(`url(${image}),linear-gradient(rgba(0, 158, 218), rgba(0, 124, 190))`);\r\n\t}\r\n}\r\n","import { SessionStorageService, DatastoreKeys } from 'common-lib';\r\n\r\nexport class ApexParams {\r\n    icUsername: string;\r\n    icRememberMe: boolean;\r\n    authCallbackUrl: string;\r\n    authenticatorService = 'inc_Authenticator';\r\n    langCode: string;\r\n    resourceBase: string;\r\n    sfSessionId: string;\r\n    namespacePrefix: string;\r\n    \r\n    static init(): ApexParams {\r\n        const sessionStorageSvc = new SessionStorageService();\r\n        const param = new ApexParams();\r\n        // this value set from Visualforce / HTML page\r\n        const params = sessionStorageSvc.get(DatastoreKeys.InitParam);\r\n        if (params) {\r\n            const obj = JSON.parse(params);\r\n            param.icUsername = obj.icUsername;\r\n            param.icRememberMe = obj.icRememberMe ? JSON.parse(obj.icRememberMe) : false; // convert string to boolean\r\n            param.authCallbackUrl = obj.authCallbackUrl;\r\n            param.langCode = obj.langCode;\r\n            param.resourceBase = obj.resourceBase;\r\n            param.sfSessionId = obj.sfSessionId;\r\n            param.namespacePrefix = obj.namespacePrefix;\r\n            if (obj.namespacePrefix !== '') {\r\n                param.authenticatorService = obj.namespacePrefix + '.' + param.authenticatorService;\r\n            }\r\n        } else {\r\n            param.langCode = 'en_US';\r\n            param.resourceBase = '.';\r\n        }\r\n        return param;\r\n    }\r\n}\r\n","import { SalesforceAuthenticationService } from '../services/salesforce-authentication.service';\r\n\r\n export const environment = {\r\n  production: false,\r\n  authenticationService: SalesforceAuthenticationService\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export class ErrorMessage {\r\n    centralError = '';\r\n    idpError = '';\r\n    authSettingsError = '';\r\n    refreshTokenError = '';\r\n    callCenterError = '';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AccessTokenService } from 'common-lib';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpWrapperService {\r\n\r\n  static JsonContent = 'application/json; charset=UTF-8';\r\n\r\n  constructor(private httpClient: HttpClient, private accessTokenSvc: AccessTokenService) {\r\n  }\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const authToken = this.accessTokenSvc.getAccessToken();\r\n    return new HttpHeaders({\r\n      'Content-Type': HttpWrapperService.JsonContent,\r\n      'Authorization': 'bearer ' + authToken.accessToken\r\n    });\r\n  }\r\n\r\n  get(url: string, httpHeaders?: HttpHeaders) {\r\n    return this.httpClient.get(url, { headers: httpHeaders ? httpHeaders : this.getHeaders() });\r\n  }\r\n\r\n  getText(url: string) {\r\n    return this.httpClient.get(url, { responseType: 'text' });\r\n  }\r\n\r\n  post(url: string, body: any, httpHeaders?: HttpHeaders, withCredentials?: boolean) {\r\n    return this.httpClient.post(url, body, { headers: httpHeaders ? httpHeaders : this.getHeaders(), withCredentials: withCredentials });\r\n  }\r\n\r\n  put(url: string, body: any, httpHeaders?: HttpHeaders) {\r\n    return this.httpClient.put(url, body, { headers: httpHeaders ? httpHeaders : this.getHeaders() });\r\n  }\r\n\r\n  delete(url: string, httpHeaders?: HttpHeaders) {\r\n    return this.httpClient.delete(url, { headers: httpHeaders ? httpHeaders : this.getHeaders() });\r\n  }\r\n\r\n  deleteWithBody(url: string, body: any, httpHeaders?: HttpHeaders) {\r\n    return this.httpClient.request('delete', url, { headers: httpHeaders ? httpHeaders : this.getHeaders(), body: body } );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { URLUtilsService } from 'common-lib';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavigationUtilService {\r\n\r\n  constructor(private router: Router, private urlUtilSvc: URLUtilsService) { }\r\n\r\n  private getDefaultNavigationExtras(): NavigationExtras {\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: this.urlUtilSvc.parseQueryString(window.location.search),\r\n      skipLocationChange: true\r\n    };\r\n    return navigationExtras;\r\n  }\r\n\r\n  navigate(commands: any[], extras?: NavigationExtras) {\r\n    this.router.navigate(commands, extras ? extras : this.getDefaultNavigationExtras());\r\n  }\r\n}\r\n","declare var sforce: any;\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { OpenIDConfig } from '../model/open-id-config.model';\r\nimport { ApexParams } from '../common/apex-params';\r\nimport { AuthToken, SalesforceResponse, ValidationUtilsService, LoggerService, AuthenticateSettings, AccessTokenService } from 'common-lib';\r\nimport { throwError } from 'rxjs';\r\n\r\nimport { HttpWrapperService } from './http-wrapper.service';\r\nimport {\tLocalStorageService, DatastoreKeys} from 'common-lib';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SalesforceAuthenticationService implements AuthenticationService {\r\n  invalidCredentialsMsg: string;\r\n  accountLockedMsg: string;\r\n  accountLockedMsgFromAPI: string;\r\n  initParam: ApexParams;\r\n  private authSettings: AuthenticateSettings;\r\n\r\n  private userRegisterUriUH = '/user/register';\r\n  private accessKeyUriUH = '/access-key-management/v1/access-keys';\r\n  private userRegisterUriCentral = 'services/v16.0/agents';\r\n  private accessKeyUriCentral = 'services/V15.0/access-keys';\r\n  private getTenantIdUri = 'services/v13.0/business-unit';\r\n  private userActivateUriUH = '/user/invite';\r\n\r\n\r\n  constructor(private http: HttpClient, private httpWrapper: HttpWrapperService, private validationUtilSvc: ValidationUtilsService, private logger: LoggerService,\r\n    private localStorageSvc: LocalStorageService, private accessTokenSrv: AccessTokenService\r\n    ) {\r\n    this.invalidCredentialsMsg = 'You have entered a wrong username or password';\r\n    this.accountLockedMsg = 'For security reasons, your account is locked. Please contact your manager to unlock your account.';\r\n    this.accountLockedMsgFromAPI = 'Login failed. The account has been locked. Contact your system administrator.';\r\n    this.initParam = ApexParams.init();\r\n  }\r\n  /* New Changes starts here */\r\n\r\n  authenticateUser(userName: string, password: string, uhUrl: string) {\r\n    return new Promise((resolve, reject) => {\r\n      const initParam = ApexParams.init();\r\n      sforce.apex.execute(initParam.authenticatorService, 'authenticateUser',\r\n        { 'username': encodeURIComponent(userName), 'password': encodeURIComponent(password), 'uhUrl': uhUrl },\r\n        (response) => {\r\n          try {\r\n            const responseObj = JSON.parse(response);\r\n            if (responseObj.statusCode === 200) {\r\n              this.logger.debug(SalesforceAuthenticationService.name, 'authenticate response : ' + responseObj.data);\r\n              const authToken = new AuthToken();\r\n              authToken.parseData(JSON.parse(JSON.parse(responseObj.data)));\r\n              resolve(authToken);\r\n            } else {\r\n              this.logger.debug(SalesforceAuthenticationService.name, 'authenticate<<error: ' + response);\r\n              reject(JSON.parse(JSON.parse(responseObj.data)).error_description || responseObj.error);\r\n            }\r\n          } catch (error) {\r\n            this.logger.error(SalesforceAuthenticationService.name, 'authenticate<<exception : ' + JSON.stringify(error));\r\n            reject(error);\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  getTenatId() {\r\n    const authSetting = this.localStorageSvc.get(DatastoreKeys.AuthSettings);\r\n    this.authSettings = JSON.parse(authSetting);\r\n    const params = '?fields=tenantId';\r\n    const url = this.accessTokenSrv.getAccessToken().resourceUrl + this.getTenantIdUri + params;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.httpWrapper.get(url).toPromise().then((response: any) => {\r\n        this.logger.debug(SalesforceAuthenticationService.name, 'getTenatId - success: ' + response);\r\n        resolve(response.businessUnits[0]);\r\n      }, (error) => {\r\n        this.logger.error(SalesforceAuthenticationService.name, 'getTenatId - failed: ' + error);\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  getAgentInfo(userName: string) {\r\n    const authSetting = this.localStorageSvc.get(DatastoreKeys.AuthSettings);\r\n    this.authSettings = JSON.parse(authSetting);\r\n    const params = '?isActive=true&searchString=' + userName + '&fields=agentId,userName,emailAddress,teamId,profileId,country,city,timeZone';\r\n    const url = this.accessTokenSrv.getAccessToken().resourceUrl + this.userRegisterUriCentral + params;\r\n  \r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.httpWrapper.get(url).toPromise().then((response: any) => {\r\n        this.logger.debug(SalesforceAuthenticationService.name, 'getAgentInfo - success: ' + response);\r\n        resolve(response.agents[0]);\r\n      }, (error) => {\r\n        this.logger.error(SalesforceAuthenticationService.name, 'getAgentInfo - failed: ' + error);\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  getUserInfo(userName: string) {\r\n    const url = this.localStorageSvc.get(DatastoreKeys.EvolveWebServerUrl) + '/user';\r\n    const adminUserName = this.localStorageSvc.get(DatastoreKeys.AdminUserName).toLowerCase();\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.httpWrapper.get(url).toPromise().then((response: any) => {\r\n        const users = response.users.filter(function (entry) { return entry.userName === userName.toLowerCase(); });\r\n        let userId = '';\r\n        let status = 'ACTIVE';\r\n        if(users.length == 1) {\r\n          userId = users[0].id;\r\n          status = users[0].status;\r\n          this.logger.debug(SalesforceAuthenticationService.name, 'getUser - success: ' + userId);\r\n        }\r\n\t\t\t\tconst adminUser = response.users.filter(function (entry) { return entry.userName === adminUserName; })[0];\r\n        const res = {\r\n          \"NewUserId\" : userId,\r\n          \"adminUser\" : adminUser,\r\n          \"status\" : status\r\n        }\r\n\t\t\t\tresolve(res);\r\n\t\t\t}, (error) => {\r\n\t\t\t\tthis.logger.error(SalesforceAuthenticationService.name, 'getUser - failed: ' + error);\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t});\r\n  }\r\n  \r\n  activateUser(emailAddressesList: string, senderEmail: string) {\r\n    const url = this.localStorageSvc.get(DatastoreKeys.EvolveWebServerUrl) + this.userActivateUriUH;\r\n    const payload = {\r\n                      \"emailAddressesList\" : [emailAddressesList],\r\n                      \"senderEmail\" : senderEmail\r\n                    };\r\n    return new Promise((resolve, reject) => {\r\n      this.httpWrapper.post(url, payload).toPromise().then((response: any) => {\r\n        this.logger.debug(SalesforceAuthenticationService.name, 'activateUser - success: ' + response);\r\n        resolve(response);\r\n      }, (error) => {\r\n        this.logger.error(SalesforceAuthenticationService.name, 'activateUser - failed: ' + error);\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  userRegistration(payload: any, evolveWebServerUrl: string) {\r\n    let url = '';\r\n    if (evolveWebServerUrl !== 'Central'){\r\n      url = url + evolveWebServerUrl + this.userRegisterUriUH;\r\n    } else {\r\n      url = url + this.accessTokenSrv.getAccessToken().resourceUrl + this.userRegisterUriCentral;\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      this.httpWrapper.post(url, payload).toPromise().then((response: any) => {\r\n        this.logger.debug(SalesforceAuthenticationService.name, 'userRegistration - success: ' + response);\r\n        resolve(response);\r\n      }, (error) => {\r\n        this.logger.error(SalesforceAuthenticationService.name, 'userRegistration - failed: ' + error);\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n  \r\n  createAccessKeyAPI(evolveWebServerUrl: string) {\r\n    let url = '';\r\n    let payload = {};\r\n    if (evolveWebServerUrl !== 'Central'){\r\n      url = url + evolveWebServerUrl + this.accessKeyUriUH;\r\n      payload = {\r\n        \"userId\": this.localStorageSvc.get(DatastoreKeys.NewUserId),\r\n        \"tenantId\" : this.localStorageSvc.get(DatastoreKeys.TenantId)\r\n      };\r\n    } else {\r\n      url = url + this.accessTokenSrv.getAccessToken().resourceUrl + this.accessKeyUriCentral;\r\n      payload = {\r\n        \"agentId\": parseInt(this.localStorageSvc.get(DatastoreKeys.NewUserId))\r\n      };\r\n    }\r\n   \r\n    return new Promise((resolve, reject) => {\r\n      this.httpWrapper.post(url, payload).toPromise().then((response: any) => {\r\n        this.logger.debug(SalesforceAuthenticationService.name, 'createAccessKeyAPI - success: ' + response);\r\n        resolve(response);\r\n      }, (error) => {\r\n        this.logger.error(SalesforceAuthenticationService.name, 'createAccessKeyAPI - failed: ' + error);\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n  storeAccessAndSecretKey() {\r\n    this.logger.log(SalesforceAuthenticationService.name, 'storeAccessKeySecret');\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const initParam1 = ApexParams.init();\r\n        const accessKeySec = JSON.parse(this.localStorageSvc.get(DatastoreKeys.AccessSecretKey));\r\n        sforce.apex.execute( initParam1.authenticatorService, 'storeAccessKeySecret',\r\n          {'accessKeyId' : encodeURIComponent(accessKeySec.accessKey.accessKeyId),\r\n          'accessKeySecret': encodeURIComponent(accessKeySec.accessKey.accessKeySecret)},\r\n           (response) => {\r\n            this.logger.debug(SalesforceAuthenticationService.name, 'storeAccessKeySecret - ' + JSON.stringify(response));\r\n            const apexResponse = JSON.parse(response);\r\n            if (apexResponse.success === 'true') {\r\n              resolve(true);\r\n            } else {\r\n              reject(apexResponse.error);\r\n            }\r\n        });\r\n      } catch (e) {\r\n        this.logger.error(SalesforceAuthenticationService.name, 'Error in storeAccessKeySecret...' + e);\r\n        reject(e.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  /* New Changes ends here */\r\n\r\n}\r\n"],"sourceRoot":""}